{
  "_args": [
    [
      "api-check@7.5.0",
      "/root/waltz/waltz-ng"
    ]
  ],
  "_from": "api-check@7.5.0",
  "_id": "api-check@7.5.0",
  "_inBundle": false,
  "_integrity": "sha1-1lvw5a075qkcm7aILzHDJuNMkqg=",
  "_location": "/api-check",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "api-check@7.5.0",
    "name": "api-check",
    "escapedName": "api-check",
    "rawSpec": "7.5.0",
    "saveSpec": null,
    "fetchSpec": "7.5.0"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/api-check/-/api-check-7.5.0.tgz",
  "_spec": "7.5.0",
  "_where": "/root/waltz/waltz-ng",
  "author": {
    "name": "Kent C. Dodds",
    "email": "kent@doddsfamily.us",
    "url": "http://kent.doddsfamily.us"
  },
  "bugs": {
    "url": "https://github.com/kentcdodds/api-check/issues"
  },
  "config": {
    "ghooks": {
      "pre-commit": "npm run ci"
    }
  },
  "dependencies": {},
  "description": "Validate the api to your functions to help people use them correctly. This is pretty much React's propTypes without React.",
  "devDependencies": {
    "babel": "5.5.8",
    "babel-core": "5.5.8",
    "babel-eslint": "3.1.17",
    "babel-loader": "5.1.4",
    "chai": "2.1.0",
    "codeclimate-test-reporter": "0.0.4",
    "eslint": "0.23.0",
    "eslint-loader": "0.14.0",
    "ghooks": "0.2.4",
    "isparta": "3.0.3",
    "isparta-loader": "0.2.0",
    "istanbul": "0.3.5",
    "json-stringify-safe": "5.0.0",
    "karma": "0.12.36",
    "karma-chai": "0.1.0",
    "karma-chrome-launcher": "0.1.12",
    "karma-coverage": "0.4.2",
    "karma-firefox-launcher": "0.1.6",
    "karma-mocha": "0.1.10",
    "karma-webpack": "1.5.1",
    "kcd-common-tools": "1.0.0-beta.9",
    "lodash": "3.9.3",
    "mocha": "2.1.0",
    "node-libs-browser": "^0.5.2",
    "surge": "0.14.2",
    "uglify-loader": "1.2.0",
    "webpack": "1.9.11",
    "with-package": "0.2.0"
  },
  "homepage": "https://github.com/kentcdodds/api-check",
  "kcdCommon": {
    "webpack": {
      "output": {
        "library": "apiCheck",
        "libraryTarget": "umd"
      }
    }
  },
  "keywords": [
    "javascript",
    "validation",
    "api",
    "function",
    "propTypes"
  ],
  "license": "MIT",
  "main": "dist/api-check.js",
  "name": "api-check",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kentcdodds/api-check.git"
  },
  "scripts": {
    "build": "npm run build:dist & npm run build:prod",
    "build:dist": "NODE_ENV=development webpack --config node_modules/kcd-common-tools/shared/webpack.config.js --progress --colors",
    "build:prod": "NODE_ENV=production webpack --config node_modules/kcd-common-tools/shared/webpack.config.js --progress --colors",
    "check-coverage": "./node_modules/istanbul/lib/cli.js check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
    "ci": "npm run code-checks && npm run test:single && npm run check-coverage && npm run build",
    "code-checks": "npm run only-check && npm run console-check",
    "console-check": "node node_modules/kcd-common-tools/shared/scripts/console-check.js",
    "deploy": "npm run deployClean && npm run deployCopy && npm run deploySurge",
    "deployClean": "rm -rf deploy.ignored/ && mkdir deploy.ignored/ && mkdir deploy.ignored/dist/",
    "deployCopy": "cp index.html deploy.ignored/ && cp dist/api-check.js deploy.ignored/dist/",
    "deploySurge": "surge -p deploy.ignored -d api-check.surge.sh",
    "only-check": "node node_modules/kcd-common-tools/shared/scripts/only-check.js",
    "release": "npm run build && with-package git commit -am pkg.version && with-package git tag pkg.version && git push && npm publish && git push --tags",
    "release:beta": "npm run release && npm run tag:beta",
    "report-coverage": "codeclimate < ./coverage/lcov.info",
    "start": "npm run test",
    "tag:beta": "with-package npm dist-tag add pkg.name@pkg.version beta",
    "test": "COVERAGE=true NODE_ENV=test karma start",
    "test:debug": "echo 'WARNING: This is currently not working quite right...' && NODE_ENV=test karma start --browsers Chrome",
    "test:single": "COVERAGE=true NODE_ENV=test karma start --single-run"
  },
  "version": "7.5.0"
}
