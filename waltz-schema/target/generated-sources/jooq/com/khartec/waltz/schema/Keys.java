/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema;


import com.khartec.waltz.schema.tables.AccessLog;
import com.khartec.waltz.schema.tables.Actor;
import com.khartec.waltz.schema.tables.Application;
import com.khartec.waltz.schema.tables.ApplicationGroup;
import com.khartec.waltz.schema.tables.ApplicationGroupEntry;
import com.khartec.waltz.schema.tables.ApplicationGroupMember;
import com.khartec.waltz.schema.tables.AssessmentDefinition;
import com.khartec.waltz.schema.tables.AssessmentRating;
import com.khartec.waltz.schema.tables.AttestationInstance;
import com.khartec.waltz.schema.tables.AttestationInstanceRecipient;
import com.khartec.waltz.schema.tables.AttestationRun;
import com.khartec.waltz.schema.tables.Attestation_1_11;
import com.khartec.waltz.schema.tables.AuthoritativeSource;
import com.khartec.waltz.schema.tables.Bookmark;
import com.khartec.waltz.schema.tables.ChangeInitiative;
import com.khartec.waltz.schema.tables.ChangeLog;
import com.khartec.waltz.schema.tables.ComplexityScore;
import com.khartec.waltz.schema.tables.DataType;
import com.khartec.waltz.schema.tables.DataTypeUsage;
import com.khartec.waltz.schema.tables.DatabaseInformation;
import com.khartec.waltz.schema.tables.Databasechangeloglock;
import com.khartec.waltz.schema.tables.DrillGridDefinition;
import com.khartec.waltz.schema.tables.EntityAlias;
import com.khartec.waltz.schema.tables.EntityEnumDefinition;
import com.khartec.waltz.schema.tables.EntityNamedNote;
import com.khartec.waltz.schema.tables.EntityNamedNoteType;
import com.khartec.waltz.schema.tables.EntityRelationship;
import com.khartec.waltz.schema.tables.EntityStatisticDefinition;
import com.khartec.waltz.schema.tables.EntityStatisticValue;
import com.khartec.waltz.schema.tables.EntitySvgDiagram;
import com.khartec.waltz.schema.tables.EntityTag;
import com.khartec.waltz.schema.tables.EntityWorkflowDefinition;
import com.khartec.waltz.schema.tables.EnumValue;
import com.khartec.waltz.schema.tables.FlowDiagram;
import com.khartec.waltz.schema.tables.FlowDiagramAnnotation;
import com.khartec.waltz.schema.tables.FlowDiagramEntity;
import com.khartec.waltz.schema.tables.InvolvementKind;
import com.khartec.waltz.schema.tables.LogicalDataElement;
import com.khartec.waltz.schema.tables.LogicalFlow;
import com.khartec.waltz.schema.tables.LogicalFlowDecorator;
import com.khartec.waltz.schema.tables.Measurable;
import com.khartec.waltz.schema.tables.MeasurableCategory;
import com.khartec.waltz.schema.tables.MeasurableRating;
import com.khartec.waltz.schema.tables.OrganisationalUnit;
import com.khartec.waltz.schema.tables.Person;
import com.khartec.waltz.schema.tables.PersonHierarchy;
import com.khartec.waltz.schema.tables.PerspectiveDefinition;
import com.khartec.waltz.schema.tables.PerspectiveRating;
import com.khartec.waltz.schema.tables.PhysicalFlow;
import com.khartec.waltz.schema.tables.PhysicalSpecDataType;
import com.khartec.waltz.schema.tables.PhysicalSpecDefn;
import com.khartec.waltz.schema.tables.PhysicalSpecDefnField;
import com.khartec.waltz.schema.tables.PhysicalSpecDefnSampleFile;
import com.khartec.waltz.schema.tables.PhysicalSpecification;
import com.khartec.waltz.schema.tables.RatingScheme;
import com.khartec.waltz.schema.tables.RatingSchemeItem;
import com.khartec.waltz.schema.tables.Roadmap;
import com.khartec.waltz.schema.tables.Scenario;
import com.khartec.waltz.schema.tables.ScenarioAxisItem;
import com.khartec.waltz.schema.tables.ScenarioRatingItem;
import com.khartec.waltz.schema.tables.ServerInformation;
import com.khartec.waltz.schema.tables.Settings;
import com.khartec.waltz.schema.tables.SharedPreference;
import com.khartec.waltz.schema.tables.SoftwarePackage;
import com.khartec.waltz.schema.tables.SourceDataRating;
import com.khartec.waltz.schema.tables.StaticPanel;
import com.khartec.waltz.schema.tables.SurveyInstance;
import com.khartec.waltz.schema.tables.SurveyInstanceRecipient;
import com.khartec.waltz.schema.tables.SurveyQuestion;
import com.khartec.waltz.schema.tables.SurveyQuestionDropdownEntry;
import com.khartec.waltz.schema.tables.SurveyQuestionResponse;
import com.khartec.waltz.schema.tables.SurveyRun;
import com.khartec.waltz.schema.tables.SurveyTemplate;
import com.khartec.waltz.schema.tables.SvgDiagram;
import com.khartec.waltz.schema.tables.SystemJobLog;
import com.khartec.waltz.schema.tables.Tour;
import com.khartec.waltz.schema.tables.User;
import com.khartec.waltz.schema.tables.UserAgentInfo;
import com.khartec.waltz.schema.tables.UserPreference;
import com.khartec.waltz.schema.tables.UserRole;
import com.khartec.waltz.schema.tables.records.AccessLogRecord;
import com.khartec.waltz.schema.tables.records.ActorRecord;
import com.khartec.waltz.schema.tables.records.ApplicationGroupEntryRecord;
import com.khartec.waltz.schema.tables.records.ApplicationGroupMemberRecord;
import com.khartec.waltz.schema.tables.records.ApplicationGroupRecord;
import com.khartec.waltz.schema.tables.records.ApplicationRecord;
import com.khartec.waltz.schema.tables.records.AssessmentDefinitionRecord;
import com.khartec.waltz.schema.tables.records.AssessmentRatingRecord;
import com.khartec.waltz.schema.tables.records.AttestationInstanceRecipientRecord;
import com.khartec.waltz.schema.tables.records.AttestationInstanceRecord;
import com.khartec.waltz.schema.tables.records.AttestationRunRecord;
import com.khartec.waltz.schema.tables.records.Attestation_1_11Record;
import com.khartec.waltz.schema.tables.records.AuthoritativeSourceRecord;
import com.khartec.waltz.schema.tables.records.BookmarkRecord;
import com.khartec.waltz.schema.tables.records.ChangeInitiativeRecord;
import com.khartec.waltz.schema.tables.records.ChangeLogRecord;
import com.khartec.waltz.schema.tables.records.ComplexityScoreRecord;
import com.khartec.waltz.schema.tables.records.DataTypeRecord;
import com.khartec.waltz.schema.tables.records.DataTypeUsageRecord;
import com.khartec.waltz.schema.tables.records.DatabaseInformationRecord;
import com.khartec.waltz.schema.tables.records.DatabasechangeloglockRecord;
import com.khartec.waltz.schema.tables.records.DrillGridDefinitionRecord;
import com.khartec.waltz.schema.tables.records.EntityAliasRecord;
import com.khartec.waltz.schema.tables.records.EntityEnumDefinitionRecord;
import com.khartec.waltz.schema.tables.records.EntityNamedNoteRecord;
import com.khartec.waltz.schema.tables.records.EntityNamedNoteTypeRecord;
import com.khartec.waltz.schema.tables.records.EntityRelationshipRecord;
import com.khartec.waltz.schema.tables.records.EntityStatisticDefinitionRecord;
import com.khartec.waltz.schema.tables.records.EntityStatisticValueRecord;
import com.khartec.waltz.schema.tables.records.EntitySvgDiagramRecord;
import com.khartec.waltz.schema.tables.records.EntityTagRecord;
import com.khartec.waltz.schema.tables.records.EntityWorkflowDefinitionRecord;
import com.khartec.waltz.schema.tables.records.EnumValueRecord;
import com.khartec.waltz.schema.tables.records.FlowDiagramAnnotationRecord;
import com.khartec.waltz.schema.tables.records.FlowDiagramEntityRecord;
import com.khartec.waltz.schema.tables.records.FlowDiagramRecord;
import com.khartec.waltz.schema.tables.records.InvolvementKindRecord;
import com.khartec.waltz.schema.tables.records.LogicalDataElementRecord;
import com.khartec.waltz.schema.tables.records.LogicalFlowDecoratorRecord;
import com.khartec.waltz.schema.tables.records.LogicalFlowRecord;
import com.khartec.waltz.schema.tables.records.MeasurableCategoryRecord;
import com.khartec.waltz.schema.tables.records.MeasurableRatingRecord;
import com.khartec.waltz.schema.tables.records.MeasurableRecord;
import com.khartec.waltz.schema.tables.records.OrganisationalUnitRecord;
import com.khartec.waltz.schema.tables.records.PersonHierarchyRecord;
import com.khartec.waltz.schema.tables.records.PersonRecord;
import com.khartec.waltz.schema.tables.records.PerspectiveDefinitionRecord;
import com.khartec.waltz.schema.tables.records.PerspectiveRatingRecord;
import com.khartec.waltz.schema.tables.records.PhysicalFlowRecord;
import com.khartec.waltz.schema.tables.records.PhysicalSpecDataTypeRecord;
import com.khartec.waltz.schema.tables.records.PhysicalSpecDefnFieldRecord;
import com.khartec.waltz.schema.tables.records.PhysicalSpecDefnRecord;
import com.khartec.waltz.schema.tables.records.PhysicalSpecDefnSampleFileRecord;
import com.khartec.waltz.schema.tables.records.PhysicalSpecificationRecord;
import com.khartec.waltz.schema.tables.records.RatingSchemeItemRecord;
import com.khartec.waltz.schema.tables.records.RatingSchemeRecord;
import com.khartec.waltz.schema.tables.records.RoadmapRecord;
import com.khartec.waltz.schema.tables.records.ScenarioAxisItemRecord;
import com.khartec.waltz.schema.tables.records.ScenarioRatingItemRecord;
import com.khartec.waltz.schema.tables.records.ScenarioRecord;
import com.khartec.waltz.schema.tables.records.ServerInformationRecord;
import com.khartec.waltz.schema.tables.records.SettingsRecord;
import com.khartec.waltz.schema.tables.records.SharedPreferenceRecord;
import com.khartec.waltz.schema.tables.records.SoftwarePackageRecord;
import com.khartec.waltz.schema.tables.records.SourceDataRatingRecord;
import com.khartec.waltz.schema.tables.records.StaticPanelRecord;
import com.khartec.waltz.schema.tables.records.SurveyInstanceRecipientRecord;
import com.khartec.waltz.schema.tables.records.SurveyInstanceRecord;
import com.khartec.waltz.schema.tables.records.SurveyQuestionDropdownEntryRecord;
import com.khartec.waltz.schema.tables.records.SurveyQuestionRecord;
import com.khartec.waltz.schema.tables.records.SurveyQuestionResponseRecord;
import com.khartec.waltz.schema.tables.records.SurveyRunRecord;
import com.khartec.waltz.schema.tables.records.SurveyTemplateRecord;
import com.khartec.waltz.schema.tables.records.SvgDiagramRecord;
import com.khartec.waltz.schema.tables.records.SystemJobLogRecord;
import com.khartec.waltz.schema.tables.records.TourRecord;
import com.khartec.waltz.schema.tables.records.UserAgentInfoRecord;
import com.khartec.waltz.schema.tables.records.UserPreferenceRecord;
import com.khartec.waltz.schema.tables.records.UserRecord;
import com.khartec.waltz.schema.tables.records.UserRoleRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccessLogRecord, Integer> IDENTITY_ACCESS_LOG = Identities0.IDENTITY_ACCESS_LOG;
    public static final Identity<ActorRecord, Long> IDENTITY_ACTOR = Identities0.IDENTITY_ACTOR;
    public static final Identity<ApplicationRecord, Long> IDENTITY_APPLICATION = Identities0.IDENTITY_APPLICATION;
    public static final Identity<ApplicationGroupRecord, Long> IDENTITY_APPLICATION_GROUP = Identities0.IDENTITY_APPLICATION_GROUP;
    public static final Identity<AssessmentDefinitionRecord, Long> IDENTITY_ASSESSMENT_DEFINITION = Identities0.IDENTITY_ASSESSMENT_DEFINITION;
    public static final Identity<Attestation_1_11Record, Long> IDENTITY_ATTESTATION_1_11 = Identities0.IDENTITY_ATTESTATION_1_11;
    public static final Identity<AttestationInstanceRecord, Long> IDENTITY_ATTESTATION_INSTANCE = Identities0.IDENTITY_ATTESTATION_INSTANCE;
    public static final Identity<AttestationInstanceRecipientRecord, Long> IDENTITY_ATTESTATION_INSTANCE_RECIPIENT = Identities0.IDENTITY_ATTESTATION_INSTANCE_RECIPIENT;
    public static final Identity<AttestationRunRecord, Long> IDENTITY_ATTESTATION_RUN = Identities0.IDENTITY_ATTESTATION_RUN;
    public static final Identity<AuthoritativeSourceRecord, Long> IDENTITY_AUTHORITATIVE_SOURCE = Identities0.IDENTITY_AUTHORITATIVE_SOURCE;
    public static final Identity<BookmarkRecord, Long> IDENTITY_BOOKMARK = Identities0.IDENTITY_BOOKMARK;
    public static final Identity<ChangeLogRecord, Integer> IDENTITY_CHANGE_LOG = Identities0.IDENTITY_CHANGE_LOG;
    public static final Identity<DatabaseInformationRecord, Long> IDENTITY_DATABASE_INFORMATION = Identities0.IDENTITY_DATABASE_INFORMATION;
    public static final Identity<DrillGridDefinitionRecord, Long> IDENTITY_DRILL_GRID_DEFINITION = Identities0.IDENTITY_DRILL_GRID_DEFINITION;
    public static final Identity<EntityEnumDefinitionRecord, Long> IDENTITY_ENTITY_ENUM_DEFINITION = Identities0.IDENTITY_ENTITY_ENUM_DEFINITION;
    public static final Identity<EntityNamedNoteTypeRecord, Long> IDENTITY_ENTITY_NAMED_NOTE_TYPE = Identities0.IDENTITY_ENTITY_NAMED_NOTE_TYPE;
    public static final Identity<EntityStatisticValueRecord, Long> IDENTITY_ENTITY_STATISTIC_VALUE = Identities0.IDENTITY_ENTITY_STATISTIC_VALUE;
    public static final Identity<EntitySvgDiagramRecord, Long> IDENTITY_ENTITY_SVG_DIAGRAM = Identities0.IDENTITY_ENTITY_SVG_DIAGRAM;
    public static final Identity<EntityWorkflowDefinitionRecord, Long> IDENTITY_ENTITY_WORKFLOW_DEFINITION = Identities0.IDENTITY_ENTITY_WORKFLOW_DEFINITION;
    public static final Identity<FlowDiagramRecord, Long> IDENTITY_FLOW_DIAGRAM = Identities0.IDENTITY_FLOW_DIAGRAM;
    public static final Identity<InvolvementKindRecord, Long> IDENTITY_INVOLVEMENT_KIND = Identities0.IDENTITY_INVOLVEMENT_KIND;
    public static final Identity<LogicalDataElementRecord, Long> IDENTITY_LOGICAL_DATA_ELEMENT = Identities0.IDENTITY_LOGICAL_DATA_ELEMENT;
    public static final Identity<LogicalFlowRecord, Long> IDENTITY_LOGICAL_FLOW = Identities0.IDENTITY_LOGICAL_FLOW;
    public static final Identity<MeasurableRecord, Long> IDENTITY_MEASURABLE = Identities0.IDENTITY_MEASURABLE;
    public static final Identity<MeasurableCategoryRecord, Long> IDENTITY_MEASURABLE_CATEGORY = Identities0.IDENTITY_MEASURABLE_CATEGORY;
    public static final Identity<PersonRecord, Long> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<PerspectiveDefinitionRecord, Long> IDENTITY_PERSPECTIVE_DEFINITION = Identities0.IDENTITY_PERSPECTIVE_DEFINITION;
    public static final Identity<PhysicalFlowRecord, Long> IDENTITY_PHYSICAL_FLOW = Identities0.IDENTITY_PHYSICAL_FLOW;
    public static final Identity<PhysicalSpecificationRecord, Long> IDENTITY_PHYSICAL_SPECIFICATION = Identities0.IDENTITY_PHYSICAL_SPECIFICATION;
    public static final Identity<PhysicalSpecDefnRecord, Long> IDENTITY_PHYSICAL_SPEC_DEFN = Identities0.IDENTITY_PHYSICAL_SPEC_DEFN;
    public static final Identity<PhysicalSpecDefnFieldRecord, Long> IDENTITY_PHYSICAL_SPEC_DEFN_FIELD = Identities0.IDENTITY_PHYSICAL_SPEC_DEFN_FIELD;
    public static final Identity<PhysicalSpecDefnSampleFileRecord, Long> IDENTITY_PHYSICAL_SPEC_DEFN_SAMPLE_FILE = Identities0.IDENTITY_PHYSICAL_SPEC_DEFN_SAMPLE_FILE;
    public static final Identity<RatingSchemeRecord, Long> IDENTITY_RATING_SCHEME = Identities0.IDENTITY_RATING_SCHEME;
    public static final Identity<RatingSchemeItemRecord, Long> IDENTITY_RATING_SCHEME_ITEM = Identities0.IDENTITY_RATING_SCHEME_ITEM;
    public static final Identity<RoadmapRecord, Long> IDENTITY_ROADMAP = Identities0.IDENTITY_ROADMAP;
    public static final Identity<ScenarioRecord, Long> IDENTITY_SCENARIO = Identities0.IDENTITY_SCENARIO;
    public static final Identity<ScenarioAxisItemRecord, Long> IDENTITY_SCENARIO_AXIS_ITEM = Identities0.IDENTITY_SCENARIO_AXIS_ITEM;
    public static final Identity<ScenarioRatingItemRecord, Long> IDENTITY_SCENARIO_RATING_ITEM = Identities0.IDENTITY_SCENARIO_RATING_ITEM;
    public static final Identity<ServerInformationRecord, Integer> IDENTITY_SERVER_INFORMATION = Identities0.IDENTITY_SERVER_INFORMATION;
    public static final Identity<SoftwarePackageRecord, Long> IDENTITY_SOFTWARE_PACKAGE = Identities0.IDENTITY_SOFTWARE_PACKAGE;
    public static final Identity<StaticPanelRecord, Long> IDENTITY_STATIC_PANEL = Identities0.IDENTITY_STATIC_PANEL;
    public static final Identity<SurveyInstanceRecord, Long> IDENTITY_SURVEY_INSTANCE = Identities0.IDENTITY_SURVEY_INSTANCE;
    public static final Identity<SurveyInstanceRecipientRecord, Long> IDENTITY_SURVEY_INSTANCE_RECIPIENT = Identities0.IDENTITY_SURVEY_INSTANCE_RECIPIENT;
    public static final Identity<SurveyQuestionRecord, Long> IDENTITY_SURVEY_QUESTION = Identities0.IDENTITY_SURVEY_QUESTION;
    public static final Identity<SurveyQuestionDropdownEntryRecord, Long> IDENTITY_SURVEY_QUESTION_DROPDOWN_ENTRY = Identities0.IDENTITY_SURVEY_QUESTION_DROPDOWN_ENTRY;
    public static final Identity<SurveyRunRecord, Long> IDENTITY_SURVEY_RUN = Identities0.IDENTITY_SURVEY_RUN;
    public static final Identity<SurveyTemplateRecord, Long> IDENTITY_SURVEY_TEMPLATE = Identities0.IDENTITY_SURVEY_TEMPLATE;
    public static final Identity<SvgDiagramRecord, Long> IDENTITY_SVG_DIAGRAM = Identities0.IDENTITY_SVG_DIAGRAM;
    public static final Identity<UserAgentInfoRecord, Integer> IDENTITY_USER_AGENT_INFO = Identities0.IDENTITY_USER_AGENT_INFO;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessLogRecord> KEY_ACCESS_LOG_PRIMARY = UniqueKeys0.KEY_ACCESS_LOG_PRIMARY;
    public static final UniqueKey<ActorRecord> KEY_ACTOR_PRIMARY = UniqueKeys0.KEY_ACTOR_PRIMARY;
    public static final UniqueKey<ActorRecord> KEY_ACTOR_NAME = UniqueKeys0.KEY_ACTOR_NAME;
    public static final UniqueKey<ApplicationRecord> KEY_APPLICATION_PRIMARY = UniqueKeys0.KEY_APPLICATION_PRIMARY;
    public static final UniqueKey<ApplicationGroupRecord> KEY_APPLICATION_GROUP_PRIMARY = UniqueKeys0.KEY_APPLICATION_GROUP_PRIMARY;
    public static final UniqueKey<ApplicationGroupEntryRecord> KEY_APPLICATION_GROUP_ENTRY_PRIMARY = UniqueKeys0.KEY_APPLICATION_GROUP_ENTRY_PRIMARY;
    public static final UniqueKey<ApplicationGroupMemberRecord> KEY_APPLICATION_GROUP_MEMBER_PRIMARY = UniqueKeys0.KEY_APPLICATION_GROUP_MEMBER_PRIMARY;
    public static final UniqueKey<AssessmentDefinitionRecord> KEY_ASSESSMENT_DEFINITION_PRIMARY = UniqueKeys0.KEY_ASSESSMENT_DEFINITION_PRIMARY;
    public static final UniqueKey<AssessmentRatingRecord> KEY_ASSESSMENT_RATING_PRIMARY = UniqueKeys0.KEY_ASSESSMENT_RATING_PRIMARY;
    public static final UniqueKey<Attestation_1_11Record> KEY_ATTESTATION_1_11_PRIMARY = UniqueKeys0.KEY_ATTESTATION_1_11_PRIMARY;
    public static final UniqueKey<AttestationInstanceRecord> KEY_ATTESTATION_INSTANCE_PRIMARY = UniqueKeys0.KEY_ATTESTATION_INSTANCE_PRIMARY;
    public static final UniqueKey<AttestationInstanceRecipientRecord> KEY_ATTESTATION_INSTANCE_RECIPIENT_PRIMARY = UniqueKeys0.KEY_ATTESTATION_INSTANCE_RECIPIENT_PRIMARY;
    public static final UniqueKey<AttestationRunRecord> KEY_ATTESTATION_RUN_PRIMARY = UniqueKeys0.KEY_ATTESTATION_RUN_PRIMARY;
    public static final UniqueKey<AuthoritativeSourceRecord> KEY_AUTHORITATIVE_SOURCE_PRIMARY = UniqueKeys0.KEY_AUTHORITATIVE_SOURCE_PRIMARY;
    public static final UniqueKey<AuthoritativeSourceRecord> KEY_AUTHORITATIVE_SOURCE_IDX_AUTH_SOURCE_UNIQUE = UniqueKeys0.KEY_AUTHORITATIVE_SOURCE_IDX_AUTH_SOURCE_UNIQUE;
    public static final UniqueKey<BookmarkRecord> KEY_BOOKMARK_PRIMARY = UniqueKeys0.KEY_BOOKMARK_PRIMARY;
    public static final UniqueKey<ChangeInitiativeRecord> KEY_CHANGE_INITIATIVE_PRIMARY = UniqueKeys0.KEY_CHANGE_INITIATIVE_PRIMARY;
    public static final UniqueKey<ChangeLogRecord> KEY_CHANGE_LOG_PRIMARY = UniqueKeys0.KEY_CHANGE_LOG_PRIMARY;
    public static final UniqueKey<ComplexityScoreRecord> KEY_COMPLEXITY_SCORE_PRIMARY = UniqueKeys0.KEY_COMPLEXITY_SCORE_PRIMARY;
    public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
    public static final UniqueKey<DatabaseInformationRecord> KEY_DATABASE_INFORMATION_PRIMARY = UniqueKeys0.KEY_DATABASE_INFORMATION_PRIMARY;
    public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_IDX_CODE = UniqueKeys0.KEY_DATA_TYPE_IDX_CODE;
    public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_PRIMARY = UniqueKeys0.KEY_DATA_TYPE_PRIMARY;
    public static final UniqueKey<DataTypeUsageRecord> KEY_DATA_TYPE_USAGE_PRIMARY = UniqueKeys0.KEY_DATA_TYPE_USAGE_PRIMARY;
    public static final UniqueKey<DrillGridDefinitionRecord> KEY_DRILL_GRID_DEFINITION_PRIMARY = UniqueKeys0.KEY_DRILL_GRID_DEFINITION_PRIMARY;
    public static final UniqueKey<DrillGridDefinitionRecord> KEY_DRILL_GRID_DEFINITION_IDX_DRILL_GRID_DEFN_UNIQUE = UniqueKeys0.KEY_DRILL_GRID_DEFINITION_IDX_DRILL_GRID_DEFN_UNIQUE;
    public static final UniqueKey<EntityAliasRecord> KEY_ENTITY_ALIAS_PRIMARY = UniqueKeys0.KEY_ENTITY_ALIAS_PRIMARY;
    public static final UniqueKey<EntityEnumDefinitionRecord> KEY_ENTITY_ENUM_DEFINITION_PRIMARY = UniqueKeys0.KEY_ENTITY_ENUM_DEFINITION_PRIMARY;
    public static final UniqueKey<EntityNamedNoteRecord> KEY_ENTITY_NAMED_NOTE_PRIMARY = UniqueKeys0.KEY_ENTITY_NAMED_NOTE_PRIMARY;
    public static final UniqueKey<EntityNamedNoteTypeRecord> KEY_ENTITY_NAMED_NOTE_TYPE_PRIMARY = UniqueKeys0.KEY_ENTITY_NAMED_NOTE_TYPE_PRIMARY;
    public static final UniqueKey<EntityRelationshipRecord> KEY_ENTITY_RELATIONSHIP_PRIMARY = UniqueKeys0.KEY_ENTITY_RELATIONSHIP_PRIMARY;
    public static final UniqueKey<EntityStatisticDefinitionRecord> KEY_ENTITY_STATISTIC_DEFINITION_PRIMARY = UniqueKeys0.KEY_ENTITY_STATISTIC_DEFINITION_PRIMARY;
    public static final UniqueKey<EntityStatisticValueRecord> KEY_ENTITY_STATISTIC_VALUE_PRIMARY = UniqueKeys0.KEY_ENTITY_STATISTIC_VALUE_PRIMARY;
    public static final UniqueKey<EntitySvgDiagramRecord> KEY_ENTITY_SVG_DIAGRAM_PRIMARY = UniqueKeys0.KEY_ENTITY_SVG_DIAGRAM_PRIMARY;
    public static final UniqueKey<EntityTagRecord> KEY_ENTITY_TAG_PRIMARY = UniqueKeys0.KEY_ENTITY_TAG_PRIMARY;
    public static final UniqueKey<EntityWorkflowDefinitionRecord> KEY_ENTITY_WORKFLOW_DEFINITION_PRIMARY = UniqueKeys0.KEY_ENTITY_WORKFLOW_DEFINITION_PRIMARY;
    public static final UniqueKey<EnumValueRecord> KEY_ENUM_VALUE_PRIMARY = UniqueKeys0.KEY_ENUM_VALUE_PRIMARY;
    public static final UniqueKey<FlowDiagramRecord> KEY_FLOW_DIAGRAM_PRIMARY = UniqueKeys0.KEY_FLOW_DIAGRAM_PRIMARY;
    public static final UniqueKey<FlowDiagramAnnotationRecord> KEY_FLOW_DIAGRAM_ANNOTATION_PRIMARY = UniqueKeys0.KEY_FLOW_DIAGRAM_ANNOTATION_PRIMARY;
    public static final UniqueKey<FlowDiagramEntityRecord> KEY_FLOW_DIAGRAM_ENTITY_PRIMARY = UniqueKeys0.KEY_FLOW_DIAGRAM_ENTITY_PRIMARY;
    public static final UniqueKey<InvolvementKindRecord> KEY_INVOLVEMENT_KIND_PRIMARY = UniqueKeys0.KEY_INVOLVEMENT_KIND_PRIMARY;
    public static final UniqueKey<InvolvementKindRecord> KEY_INVOLVEMENT_KIND_NAME = UniqueKeys0.KEY_INVOLVEMENT_KIND_NAME;
    public static final UniqueKey<LogicalDataElementRecord> KEY_LOGICAL_DATA_ELEMENT_PRIMARY = UniqueKeys0.KEY_LOGICAL_DATA_ELEMENT_PRIMARY;
    public static final UniqueKey<LogicalFlowRecord> KEY_LOGICAL_FLOW_UNIQUE_LOGICAL_FLOW = UniqueKeys0.KEY_LOGICAL_FLOW_UNIQUE_LOGICAL_FLOW;
    public static final UniqueKey<LogicalFlowRecord> KEY_LOGICAL_FLOW_PRIMARY = UniqueKeys0.KEY_LOGICAL_FLOW_PRIMARY;
    public static final UniqueKey<LogicalFlowDecoratorRecord> KEY_LOGICAL_FLOW_DECORATOR_PRIMARY = UniqueKeys0.KEY_LOGICAL_FLOW_DECORATOR_PRIMARY;
    public static final UniqueKey<MeasurableRecord> KEY_MEASURABLE_PRIMARY = UniqueKeys0.KEY_MEASURABLE_PRIMARY;
    public static final UniqueKey<MeasurableCategoryRecord> KEY_MEASURABLE_CATEGORY_PRIMARY = UniqueKeys0.KEY_MEASURABLE_CATEGORY_PRIMARY;
    public static final UniqueKey<MeasurableRatingRecord> KEY_MEASURABLE_RATING_PRIMARY = UniqueKeys0.KEY_MEASURABLE_RATING_PRIMARY;
    public static final UniqueKey<OrganisationalUnitRecord> KEY_ORGANISATIONAL_UNIT_PRIMARY = UniqueKeys0.KEY_ORGANISATIONAL_UNIT_PRIMARY;
    public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = UniqueKeys0.KEY_PERSON_PRIMARY;
    public static final UniqueKey<PersonRecord> KEY_PERSON_UNIQUE_EMPLOYEE_ID = UniqueKeys0.KEY_PERSON_UNIQUE_EMPLOYEE_ID;
    public static final UniqueKey<PersonHierarchyRecord> KEY_PERSON_HIERARCHY_PRIMARY = UniqueKeys0.KEY_PERSON_HIERARCHY_PRIMARY;
    public static final UniqueKey<PerspectiveDefinitionRecord> KEY_PERSPECTIVE_DEFINITION_PRIMARY = UniqueKeys0.KEY_PERSPECTIVE_DEFINITION_PRIMARY;
    public static final UniqueKey<PerspectiveRatingRecord> KEY_PERSPECTIVE_RATING_PRIMARY = UniqueKeys0.KEY_PERSPECTIVE_RATING_PRIMARY;
    public static final UniqueKey<PhysicalFlowRecord> KEY_PHYSICAL_FLOW_PRIMARY = UniqueKeys0.KEY_PHYSICAL_FLOW_PRIMARY;
    public static final UniqueKey<PhysicalSpecificationRecord> KEY_PHYSICAL_SPECIFICATION_PRIMARY = UniqueKeys0.KEY_PHYSICAL_SPECIFICATION_PRIMARY;
    public static final UniqueKey<PhysicalSpecDataTypeRecord> KEY_PHYSICAL_SPEC_DATA_TYPE_PRIMARY = UniqueKeys0.KEY_PHYSICAL_SPEC_DATA_TYPE_PRIMARY;
    public static final UniqueKey<PhysicalSpecDefnRecord> KEY_PHYSICAL_SPEC_DEFN_PRIMARY = UniqueKeys0.KEY_PHYSICAL_SPEC_DEFN_PRIMARY;
    public static final UniqueKey<PhysicalSpecDefnRecord> KEY_PHYSICAL_SPEC_DEFN_PHY_SPEC_DEFN_UNIQUE_VERSION = UniqueKeys0.KEY_PHYSICAL_SPEC_DEFN_PHY_SPEC_DEFN_UNIQUE_VERSION;
    public static final UniqueKey<PhysicalSpecDefnFieldRecord> KEY_PHYSICAL_SPEC_DEFN_FIELD_PRIMARY = UniqueKeys0.KEY_PHYSICAL_SPEC_DEFN_FIELD_PRIMARY;
    public static final UniqueKey<PhysicalSpecDefnSampleFileRecord> KEY_PHYSICAL_SPEC_DEFN_SAMPLE_FILE_PRIMARY = UniqueKeys0.KEY_PHYSICAL_SPEC_DEFN_SAMPLE_FILE_PRIMARY;
    public static final UniqueKey<RatingSchemeRecord> KEY_RATING_SCHEME_PRIMARY = UniqueKeys0.KEY_RATING_SCHEME_PRIMARY;
    public static final UniqueKey<RatingSchemeItemRecord> KEY_RATING_SCHEME_ITEM_PRIMARY = UniqueKeys0.KEY_RATING_SCHEME_ITEM_PRIMARY;
    public static final UniqueKey<RatingSchemeItemRecord> KEY_RATING_SCHEME_ITEM_IDX_RATING_SCHEME_ITEM_UNIQUE = UniqueKeys0.KEY_RATING_SCHEME_ITEM_IDX_RATING_SCHEME_ITEM_UNIQUE;
    public static final UniqueKey<RoadmapRecord> KEY_ROADMAP_PRIMARY = UniqueKeys0.KEY_ROADMAP_PRIMARY;
    public static final UniqueKey<ScenarioRecord> KEY_SCENARIO_PRIMARY = UniqueKeys0.KEY_SCENARIO_PRIMARY;
    public static final UniqueKey<ScenarioAxisItemRecord> KEY_SCENARIO_AXIS_ITEM_PRIMARY = UniqueKeys0.KEY_SCENARIO_AXIS_ITEM_PRIMARY;
    public static final UniqueKey<ScenarioAxisItemRecord> KEY_SCENARIO_AXIS_ITEM_IDX_SCENARIO_AXIS_UNIQ = UniqueKeys0.KEY_SCENARIO_AXIS_ITEM_IDX_SCENARIO_AXIS_UNIQ;
    public static final UniqueKey<ScenarioRatingItemRecord> KEY_SCENARIO_RATING_ITEM_PRIMARY = UniqueKeys0.KEY_SCENARIO_RATING_ITEM_PRIMARY;
    public static final UniqueKey<ServerInformationRecord> KEY_SERVER_INFORMATION_PRIMARY = UniqueKeys0.KEY_SERVER_INFORMATION_PRIMARY;
    public static final UniqueKey<SettingsRecord> KEY_SETTINGS_PRIMARY = UniqueKeys0.KEY_SETTINGS_PRIMARY;
    public static final UniqueKey<SharedPreferenceRecord> KEY_SHARED_PREFERENCE_PRIMARY = UniqueKeys0.KEY_SHARED_PREFERENCE_PRIMARY;
    public static final UniqueKey<SoftwarePackageRecord> KEY_SOFTWARE_PACKAGE_PRIMARY = UniqueKeys0.KEY_SOFTWARE_PACKAGE_PRIMARY;
    public static final UniqueKey<SourceDataRatingRecord> KEY_SOURCE_DATA_RATING_PRIMARY = UniqueKeys0.KEY_SOURCE_DATA_RATING_PRIMARY;
    public static final UniqueKey<StaticPanelRecord> KEY_STATIC_PANEL_PRIMARY = UniqueKeys0.KEY_STATIC_PANEL_PRIMARY;
    public static final UniqueKey<SurveyInstanceRecord> KEY_SURVEY_INSTANCE_PRIMARY = UniqueKeys0.KEY_SURVEY_INSTANCE_PRIMARY;
    public static final UniqueKey<SurveyInstanceRecipientRecord> KEY_SURVEY_INSTANCE_RECIPIENT_PRIMARY = UniqueKeys0.KEY_SURVEY_INSTANCE_RECIPIENT_PRIMARY;
    public static final UniqueKey<SurveyQuestionRecord> KEY_SURVEY_QUESTION_PRIMARY = UniqueKeys0.KEY_SURVEY_QUESTION_PRIMARY;
    public static final UniqueKey<SurveyQuestionDropdownEntryRecord> KEY_SURVEY_QUESTION_DROPDOWN_ENTRY_PRIMARY = UniqueKeys0.KEY_SURVEY_QUESTION_DROPDOWN_ENTRY_PRIMARY;
    public static final UniqueKey<SurveyQuestionResponseRecord> KEY_SURVEY_QUESTION_RESPONSE_PRIMARY = UniqueKeys0.KEY_SURVEY_QUESTION_RESPONSE_PRIMARY;
    public static final UniqueKey<SurveyRunRecord> KEY_SURVEY_RUN_PRIMARY = UniqueKeys0.KEY_SURVEY_RUN_PRIMARY;
    public static final UniqueKey<SurveyTemplateRecord> KEY_SURVEY_TEMPLATE_PRIMARY = UniqueKeys0.KEY_SURVEY_TEMPLATE_PRIMARY;
    public static final UniqueKey<SurveyTemplateRecord> KEY_SURVEY_TEMPLATE_SURVEY_TEMPLATE_UNIQUE_NAME = UniqueKeys0.KEY_SURVEY_TEMPLATE_SURVEY_TEMPLATE_UNIQUE_NAME;
    public static final UniqueKey<SvgDiagramRecord> KEY_SVG_DIAGRAM_PRIMARY = UniqueKeys0.KEY_SVG_DIAGRAM_PRIMARY;
    public static final UniqueKey<SystemJobLogRecord> KEY_SYSTEM_JOB_LOG_PRIMARY = UniqueKeys0.KEY_SYSTEM_JOB_LOG_PRIMARY;
    public static final UniqueKey<TourRecord> KEY_TOUR_PRIMARY = UniqueKeys0.KEY_TOUR_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserAgentInfoRecord> KEY_USER_AGENT_INFO_PRIMARY = UniqueKeys0.KEY_USER_AGENT_INFO_PRIMARY;
    public static final UniqueKey<UserPreferenceRecord> KEY_USER_PREFERENCE_PRIMARY = UniqueKeys0.KEY_USER_PREFERENCE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ApplicationGroupEntryRecord, ApplicationGroupRecord> APPLICATION_GROUP_ENTRY_GROUP_ID_FKEY = ForeignKeys0.APPLICATION_GROUP_ENTRY_GROUP_ID_FKEY;
    public static final ForeignKey<ApplicationGroupMemberRecord, ApplicationGroupRecord> APPLICATION_GROUP_MEMBER_GROUP_ID_FKEY = ForeignKeys0.APPLICATION_GROUP_MEMBER_GROUP_ID_FKEY;
    public static final ForeignKey<UserRoleRecord, UserRecord> USER_ROLE_USER_NAME_FKEY = ForeignKeys0.USER_ROLE_USER_NAME_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccessLogRecord, Integer> IDENTITY_ACCESS_LOG = Internal.createIdentity(AccessLog.ACCESS_LOG, AccessLog.ACCESS_LOG.ID);
        public static Identity<ActorRecord, Long> IDENTITY_ACTOR = Internal.createIdentity(Actor.ACTOR, Actor.ACTOR.ID);
        public static Identity<ApplicationRecord, Long> IDENTITY_APPLICATION = Internal.createIdentity(Application.APPLICATION, Application.APPLICATION.ID);
        public static Identity<ApplicationGroupRecord, Long> IDENTITY_APPLICATION_GROUP = Internal.createIdentity(ApplicationGroup.APPLICATION_GROUP, ApplicationGroup.APPLICATION_GROUP.ID);
        public static Identity<AssessmentDefinitionRecord, Long> IDENTITY_ASSESSMENT_DEFINITION = Internal.createIdentity(AssessmentDefinition.ASSESSMENT_DEFINITION, AssessmentDefinition.ASSESSMENT_DEFINITION.ID);
        public static Identity<Attestation_1_11Record, Long> IDENTITY_ATTESTATION_1_11 = Internal.createIdentity(Attestation_1_11.ATTESTATION_1_11, Attestation_1_11.ATTESTATION_1_11.ID);
        public static Identity<AttestationInstanceRecord, Long> IDENTITY_ATTESTATION_INSTANCE = Internal.createIdentity(AttestationInstance.ATTESTATION_INSTANCE, AttestationInstance.ATTESTATION_INSTANCE.ID);
        public static Identity<AttestationInstanceRecipientRecord, Long> IDENTITY_ATTESTATION_INSTANCE_RECIPIENT = Internal.createIdentity(AttestationInstanceRecipient.ATTESTATION_INSTANCE_RECIPIENT, AttestationInstanceRecipient.ATTESTATION_INSTANCE_RECIPIENT.ID);
        public static Identity<AttestationRunRecord, Long> IDENTITY_ATTESTATION_RUN = Internal.createIdentity(AttestationRun.ATTESTATION_RUN, AttestationRun.ATTESTATION_RUN.ID);
        public static Identity<AuthoritativeSourceRecord, Long> IDENTITY_AUTHORITATIVE_SOURCE = Internal.createIdentity(AuthoritativeSource.AUTHORITATIVE_SOURCE, AuthoritativeSource.AUTHORITATIVE_SOURCE.ID);
        public static Identity<BookmarkRecord, Long> IDENTITY_BOOKMARK = Internal.createIdentity(Bookmark.BOOKMARK, Bookmark.BOOKMARK.ID);
        public static Identity<ChangeLogRecord, Integer> IDENTITY_CHANGE_LOG = Internal.createIdentity(ChangeLog.CHANGE_LOG, ChangeLog.CHANGE_LOG.ID);
        public static Identity<DatabaseInformationRecord, Long> IDENTITY_DATABASE_INFORMATION = Internal.createIdentity(DatabaseInformation.DATABASE_INFORMATION, DatabaseInformation.DATABASE_INFORMATION.ID);
        public static Identity<DrillGridDefinitionRecord, Long> IDENTITY_DRILL_GRID_DEFINITION = Internal.createIdentity(DrillGridDefinition.DRILL_GRID_DEFINITION, DrillGridDefinition.DRILL_GRID_DEFINITION.ID);
        public static Identity<EntityEnumDefinitionRecord, Long> IDENTITY_ENTITY_ENUM_DEFINITION = Internal.createIdentity(EntityEnumDefinition.ENTITY_ENUM_DEFINITION, EntityEnumDefinition.ENTITY_ENUM_DEFINITION.ID);
        public static Identity<EntityNamedNoteTypeRecord, Long> IDENTITY_ENTITY_NAMED_NOTE_TYPE = Internal.createIdentity(EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE, EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.ID);
        public static Identity<EntityStatisticValueRecord, Long> IDENTITY_ENTITY_STATISTIC_VALUE = Internal.createIdentity(EntityStatisticValue.ENTITY_STATISTIC_VALUE, EntityStatisticValue.ENTITY_STATISTIC_VALUE.ID);
        public static Identity<EntitySvgDiagramRecord, Long> IDENTITY_ENTITY_SVG_DIAGRAM = Internal.createIdentity(EntitySvgDiagram.ENTITY_SVG_DIAGRAM, EntitySvgDiagram.ENTITY_SVG_DIAGRAM.ID);
        public static Identity<EntityWorkflowDefinitionRecord, Long> IDENTITY_ENTITY_WORKFLOW_DEFINITION = Internal.createIdentity(EntityWorkflowDefinition.ENTITY_WORKFLOW_DEFINITION, EntityWorkflowDefinition.ENTITY_WORKFLOW_DEFINITION.ID);
        public static Identity<FlowDiagramRecord, Long> IDENTITY_FLOW_DIAGRAM = Internal.createIdentity(FlowDiagram.FLOW_DIAGRAM, FlowDiagram.FLOW_DIAGRAM.ID);
        public static Identity<InvolvementKindRecord, Long> IDENTITY_INVOLVEMENT_KIND = Internal.createIdentity(InvolvementKind.INVOLVEMENT_KIND, InvolvementKind.INVOLVEMENT_KIND.ID);
        public static Identity<LogicalDataElementRecord, Long> IDENTITY_LOGICAL_DATA_ELEMENT = Internal.createIdentity(LogicalDataElement.LOGICAL_DATA_ELEMENT, LogicalDataElement.LOGICAL_DATA_ELEMENT.ID);
        public static Identity<LogicalFlowRecord, Long> IDENTITY_LOGICAL_FLOW = Internal.createIdentity(LogicalFlow.LOGICAL_FLOW, LogicalFlow.LOGICAL_FLOW.ID);
        public static Identity<MeasurableRecord, Long> IDENTITY_MEASURABLE = Internal.createIdentity(Measurable.MEASURABLE, Measurable.MEASURABLE.ID);
        public static Identity<MeasurableCategoryRecord, Long> IDENTITY_MEASURABLE_CATEGORY = Internal.createIdentity(MeasurableCategory.MEASURABLE_CATEGORY, MeasurableCategory.MEASURABLE_CATEGORY.ID);
        public static Identity<PersonRecord, Long> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.ID);
        public static Identity<PerspectiveDefinitionRecord, Long> IDENTITY_PERSPECTIVE_DEFINITION = Internal.createIdentity(PerspectiveDefinition.PERSPECTIVE_DEFINITION, PerspectiveDefinition.PERSPECTIVE_DEFINITION.ID);
        public static Identity<PhysicalFlowRecord, Long> IDENTITY_PHYSICAL_FLOW = Internal.createIdentity(PhysicalFlow.PHYSICAL_FLOW, PhysicalFlow.PHYSICAL_FLOW.ID);
        public static Identity<PhysicalSpecificationRecord, Long> IDENTITY_PHYSICAL_SPECIFICATION = Internal.createIdentity(PhysicalSpecification.PHYSICAL_SPECIFICATION, PhysicalSpecification.PHYSICAL_SPECIFICATION.ID);
        public static Identity<PhysicalSpecDefnRecord, Long> IDENTITY_PHYSICAL_SPEC_DEFN = Internal.createIdentity(PhysicalSpecDefn.PHYSICAL_SPEC_DEFN, PhysicalSpecDefn.PHYSICAL_SPEC_DEFN.ID);
        public static Identity<PhysicalSpecDefnFieldRecord, Long> IDENTITY_PHYSICAL_SPEC_DEFN_FIELD = Internal.createIdentity(PhysicalSpecDefnField.PHYSICAL_SPEC_DEFN_FIELD, PhysicalSpecDefnField.PHYSICAL_SPEC_DEFN_FIELD.ID);
        public static Identity<PhysicalSpecDefnSampleFileRecord, Long> IDENTITY_PHYSICAL_SPEC_DEFN_SAMPLE_FILE = Internal.createIdentity(PhysicalSpecDefnSampleFile.PHYSICAL_SPEC_DEFN_SAMPLE_FILE, PhysicalSpecDefnSampleFile.PHYSICAL_SPEC_DEFN_SAMPLE_FILE.ID);
        public static Identity<RatingSchemeRecord, Long> IDENTITY_RATING_SCHEME = Internal.createIdentity(RatingScheme.RATING_SCHEME, RatingScheme.RATING_SCHEME.ID);
        public static Identity<RatingSchemeItemRecord, Long> IDENTITY_RATING_SCHEME_ITEM = Internal.createIdentity(RatingSchemeItem.RATING_SCHEME_ITEM, RatingSchemeItem.RATING_SCHEME_ITEM.ID);
        public static Identity<RoadmapRecord, Long> IDENTITY_ROADMAP = Internal.createIdentity(Roadmap.ROADMAP, Roadmap.ROADMAP.ID);
        public static Identity<ScenarioRecord, Long> IDENTITY_SCENARIO = Internal.createIdentity(Scenario.SCENARIO, Scenario.SCENARIO.ID);
        public static Identity<ScenarioAxisItemRecord, Long> IDENTITY_SCENARIO_AXIS_ITEM = Internal.createIdentity(ScenarioAxisItem.SCENARIO_AXIS_ITEM, ScenarioAxisItem.SCENARIO_AXIS_ITEM.ID);
        public static Identity<ScenarioRatingItemRecord, Long> IDENTITY_SCENARIO_RATING_ITEM = Internal.createIdentity(ScenarioRatingItem.SCENARIO_RATING_ITEM, ScenarioRatingItem.SCENARIO_RATING_ITEM.ID);
        public static Identity<ServerInformationRecord, Integer> IDENTITY_SERVER_INFORMATION = Internal.createIdentity(ServerInformation.SERVER_INFORMATION, ServerInformation.SERVER_INFORMATION.ID);
        public static Identity<SoftwarePackageRecord, Long> IDENTITY_SOFTWARE_PACKAGE = Internal.createIdentity(SoftwarePackage.SOFTWARE_PACKAGE, SoftwarePackage.SOFTWARE_PACKAGE.ID);
        public static Identity<StaticPanelRecord, Long> IDENTITY_STATIC_PANEL = Internal.createIdentity(StaticPanel.STATIC_PANEL, StaticPanel.STATIC_PANEL.ID);
        public static Identity<SurveyInstanceRecord, Long> IDENTITY_SURVEY_INSTANCE = Internal.createIdentity(SurveyInstance.SURVEY_INSTANCE, SurveyInstance.SURVEY_INSTANCE.ID);
        public static Identity<SurveyInstanceRecipientRecord, Long> IDENTITY_SURVEY_INSTANCE_RECIPIENT = Internal.createIdentity(SurveyInstanceRecipient.SURVEY_INSTANCE_RECIPIENT, SurveyInstanceRecipient.SURVEY_INSTANCE_RECIPIENT.ID);
        public static Identity<SurveyQuestionRecord, Long> IDENTITY_SURVEY_QUESTION = Internal.createIdentity(SurveyQuestion.SURVEY_QUESTION, SurveyQuestion.SURVEY_QUESTION.ID);
        public static Identity<SurveyQuestionDropdownEntryRecord, Long> IDENTITY_SURVEY_QUESTION_DROPDOWN_ENTRY = Internal.createIdentity(SurveyQuestionDropdownEntry.SURVEY_QUESTION_DROPDOWN_ENTRY, SurveyQuestionDropdownEntry.SURVEY_QUESTION_DROPDOWN_ENTRY.ID);
        public static Identity<SurveyRunRecord, Long> IDENTITY_SURVEY_RUN = Internal.createIdentity(SurveyRun.SURVEY_RUN, SurveyRun.SURVEY_RUN.ID);
        public static Identity<SurveyTemplateRecord, Long> IDENTITY_SURVEY_TEMPLATE = Internal.createIdentity(SurveyTemplate.SURVEY_TEMPLATE, SurveyTemplate.SURVEY_TEMPLATE.ID);
        public static Identity<SvgDiagramRecord, Long> IDENTITY_SVG_DIAGRAM = Internal.createIdentity(SvgDiagram.SVG_DIAGRAM, SvgDiagram.SVG_DIAGRAM.ID);
        public static Identity<UserAgentInfoRecord, Integer> IDENTITY_USER_AGENT_INFO = Internal.createIdentity(UserAgentInfo.USER_AGENT_INFO, UserAgentInfo.USER_AGENT_INFO.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccessLogRecord> KEY_ACCESS_LOG_PRIMARY = Internal.createUniqueKey(AccessLog.ACCESS_LOG, "KEY_access_log_PRIMARY", AccessLog.ACCESS_LOG.ID);
        public static final UniqueKey<ActorRecord> KEY_ACTOR_PRIMARY = Internal.createUniqueKey(Actor.ACTOR, "KEY_actor_PRIMARY", Actor.ACTOR.ID);
        public static final UniqueKey<ActorRecord> KEY_ACTOR_NAME = Internal.createUniqueKey(Actor.ACTOR, "KEY_actor_name", Actor.ACTOR.NAME);
        public static final UniqueKey<ApplicationRecord> KEY_APPLICATION_PRIMARY = Internal.createUniqueKey(Application.APPLICATION, "KEY_application_PRIMARY", Application.APPLICATION.ID);
        public static final UniqueKey<ApplicationGroupRecord> KEY_APPLICATION_GROUP_PRIMARY = Internal.createUniqueKey(ApplicationGroup.APPLICATION_GROUP, "KEY_application_group_PRIMARY", ApplicationGroup.APPLICATION_GROUP.ID);
        public static final UniqueKey<ApplicationGroupEntryRecord> KEY_APPLICATION_GROUP_ENTRY_PRIMARY = Internal.createUniqueKey(ApplicationGroupEntry.APPLICATION_GROUP_ENTRY, "KEY_application_group_entry_PRIMARY", ApplicationGroupEntry.APPLICATION_GROUP_ENTRY.GROUP_ID, ApplicationGroupEntry.APPLICATION_GROUP_ENTRY.APPLICATION_ID);
        public static final UniqueKey<ApplicationGroupMemberRecord> KEY_APPLICATION_GROUP_MEMBER_PRIMARY = Internal.createUniqueKey(ApplicationGroupMember.APPLICATION_GROUP_MEMBER, "KEY_application_group_member_PRIMARY", ApplicationGroupMember.APPLICATION_GROUP_MEMBER.GROUP_ID, ApplicationGroupMember.APPLICATION_GROUP_MEMBER.USER_ID);
        public static final UniqueKey<AssessmentDefinitionRecord> KEY_ASSESSMENT_DEFINITION_PRIMARY = Internal.createUniqueKey(AssessmentDefinition.ASSESSMENT_DEFINITION, "KEY_assessment_definition_PRIMARY", AssessmentDefinition.ASSESSMENT_DEFINITION.ID);
        public static final UniqueKey<AssessmentRatingRecord> KEY_ASSESSMENT_RATING_PRIMARY = Internal.createUniqueKey(AssessmentRating.ASSESSMENT_RATING, "KEY_assessment_rating_PRIMARY", AssessmentRating.ASSESSMENT_RATING.ENTITY_ID, AssessmentRating.ASSESSMENT_RATING.ENTITY_KIND, AssessmentRating.ASSESSMENT_RATING.ASSESSMENT_DEFINITION_ID);
        public static final UniqueKey<Attestation_1_11Record> KEY_ATTESTATION_1_11_PRIMARY = Internal.createUniqueKey(Attestation_1_11.ATTESTATION_1_11, "KEY_attestation_1_11_PRIMARY", Attestation_1_11.ATTESTATION_1_11.ID);
        public static final UniqueKey<AttestationInstanceRecord> KEY_ATTESTATION_INSTANCE_PRIMARY = Internal.createUniqueKey(AttestationInstance.ATTESTATION_INSTANCE, "KEY_attestation_instance_PRIMARY", AttestationInstance.ATTESTATION_INSTANCE.ID);
        public static final UniqueKey<AttestationInstanceRecipientRecord> KEY_ATTESTATION_INSTANCE_RECIPIENT_PRIMARY = Internal.createUniqueKey(AttestationInstanceRecipient.ATTESTATION_INSTANCE_RECIPIENT, "KEY_attestation_instance_recipient_PRIMARY", AttestationInstanceRecipient.ATTESTATION_INSTANCE_RECIPIENT.ID);
        public static final UniqueKey<AttestationRunRecord> KEY_ATTESTATION_RUN_PRIMARY = Internal.createUniqueKey(AttestationRun.ATTESTATION_RUN, "KEY_attestation_run_PRIMARY", AttestationRun.ATTESTATION_RUN.ID);
        public static final UniqueKey<AuthoritativeSourceRecord> KEY_AUTHORITATIVE_SOURCE_PRIMARY = Internal.createUniqueKey(AuthoritativeSource.AUTHORITATIVE_SOURCE, "KEY_authoritative_source_PRIMARY", AuthoritativeSource.AUTHORITATIVE_SOURCE.ID);
        public static final UniqueKey<AuthoritativeSourceRecord> KEY_AUTHORITATIVE_SOURCE_IDX_AUTH_SOURCE_UNIQUE = Internal.createUniqueKey(AuthoritativeSource.AUTHORITATIVE_SOURCE, "KEY_authoritative_source_idx_auth_source_unique", AuthoritativeSource.AUTHORITATIVE_SOURCE.PARENT_KIND, AuthoritativeSource.AUTHORITATIVE_SOURCE.PARENT_ID, AuthoritativeSource.AUTHORITATIVE_SOURCE.DATA_TYPE, AuthoritativeSource.AUTHORITATIVE_SOURCE.APPLICATION_ID);
        public static final UniqueKey<BookmarkRecord> KEY_BOOKMARK_PRIMARY = Internal.createUniqueKey(Bookmark.BOOKMARK, "KEY_bookmark_PRIMARY", Bookmark.BOOKMARK.ID);
        public static final UniqueKey<ChangeInitiativeRecord> KEY_CHANGE_INITIATIVE_PRIMARY = Internal.createUniqueKey(ChangeInitiative.CHANGE_INITIATIVE, "KEY_change_initiative_PRIMARY", ChangeInitiative.CHANGE_INITIATIVE.ID);
        public static final UniqueKey<ChangeLogRecord> KEY_CHANGE_LOG_PRIMARY = Internal.createUniqueKey(ChangeLog.CHANGE_LOG, "KEY_change_log_PRIMARY", ChangeLog.CHANGE_LOG.ID);
        public static final UniqueKey<ComplexityScoreRecord> KEY_COMPLEXITY_SCORE_PRIMARY = Internal.createUniqueKey(ComplexityScore.COMPLEXITY_SCORE, "KEY_complexity_score_PRIMARY", ComplexityScore.COMPLEXITY_SCORE.ENTITY_KIND, ComplexityScore.COMPLEXITY_SCORE.ENTITY_ID, ComplexityScore.COMPLEXITY_SCORE.COMPLEXITY_KIND);
        public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "KEY_DATABASECHANGELOGLOCK_PRIMARY", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<DatabaseInformationRecord> KEY_DATABASE_INFORMATION_PRIMARY = Internal.createUniqueKey(DatabaseInformation.DATABASE_INFORMATION, "KEY_database_information_PRIMARY", DatabaseInformation.DATABASE_INFORMATION.ID);
        public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_IDX_CODE = Internal.createUniqueKey(DataType.DATA_TYPE, "KEY_data_type_idx_code", DataType.DATA_TYPE.CODE);
        public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_PRIMARY = Internal.createUniqueKey(DataType.DATA_TYPE, "KEY_data_type_PRIMARY", DataType.DATA_TYPE.ID);
        public static final UniqueKey<DataTypeUsageRecord> KEY_DATA_TYPE_USAGE_PRIMARY = Internal.createUniqueKey(DataTypeUsage.DATA_TYPE_USAGE, "KEY_data_type_usage_PRIMARY", DataTypeUsage.DATA_TYPE_USAGE.ENTITY_KIND, DataTypeUsage.DATA_TYPE_USAGE.ENTITY_ID, DataTypeUsage.DATA_TYPE_USAGE.DATA_TYPE_ID, DataTypeUsage.DATA_TYPE_USAGE.USAGE_KIND);
        public static final UniqueKey<DrillGridDefinitionRecord> KEY_DRILL_GRID_DEFINITION_PRIMARY = Internal.createUniqueKey(DrillGridDefinition.DRILL_GRID_DEFINITION, "KEY_drill_grid_definition_PRIMARY", DrillGridDefinition.DRILL_GRID_DEFINITION.ID);
        public static final UniqueKey<DrillGridDefinitionRecord> KEY_DRILL_GRID_DEFINITION_IDX_DRILL_GRID_DEFN_UNIQUE = Internal.createUniqueKey(DrillGridDefinition.DRILL_GRID_DEFINITION, "KEY_drill_grid_definition_idx_drill_grid_defn_unique", DrillGridDefinition.DRILL_GRID_DEFINITION.X_ENTITY_KIND, DrillGridDefinition.DRILL_GRID_DEFINITION.X_ENTITY_ID, DrillGridDefinition.DRILL_GRID_DEFINITION.Y_ENTITY_KIND, DrillGridDefinition.DRILL_GRID_DEFINITION.Y_ENTITY_ID);
        public static final UniqueKey<EntityAliasRecord> KEY_ENTITY_ALIAS_PRIMARY = Internal.createUniqueKey(EntityAlias.ENTITY_ALIAS, "KEY_entity_alias_PRIMARY", EntityAlias.ENTITY_ALIAS.ID, EntityAlias.ENTITY_ALIAS.ALIAS);
        public static final UniqueKey<EntityEnumDefinitionRecord> KEY_ENTITY_ENUM_DEFINITION_PRIMARY = Internal.createUniqueKey(EntityEnumDefinition.ENTITY_ENUM_DEFINITION, "KEY_entity_enum_definition_PRIMARY", EntityEnumDefinition.ENTITY_ENUM_DEFINITION.ID);
        public static final UniqueKey<EntityNamedNoteRecord> KEY_ENTITY_NAMED_NOTE_PRIMARY = Internal.createUniqueKey(EntityNamedNote.ENTITY_NAMED_NOTE, "KEY_entity_named_note_PRIMARY", EntityNamedNote.ENTITY_NAMED_NOTE.ENTITY_ID, EntityNamedNote.ENTITY_NAMED_NOTE.ENTITY_KIND, EntityNamedNote.ENTITY_NAMED_NOTE.NAMED_NOTE_TYPE_ID);
        public static final UniqueKey<EntityNamedNoteTypeRecord> KEY_ENTITY_NAMED_NOTE_TYPE_PRIMARY = Internal.createUniqueKey(EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE, "KEY_entity_named_note_type_PRIMARY", EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.ID);
        public static final UniqueKey<EntityRelationshipRecord> KEY_ENTITY_RELATIONSHIP_PRIMARY = Internal.createUniqueKey(EntityRelationship.ENTITY_RELATIONSHIP, "KEY_entity_relationship_PRIMARY", EntityRelationship.ENTITY_RELATIONSHIP.KIND_A, EntityRelationship.ENTITY_RELATIONSHIP.ID_A, EntityRelationship.ENTITY_RELATIONSHIP.KIND_B, EntityRelationship.ENTITY_RELATIONSHIP.ID_B, EntityRelationship.ENTITY_RELATIONSHIP.RELATIONSHIP);
        public static final UniqueKey<EntityStatisticDefinitionRecord> KEY_ENTITY_STATISTIC_DEFINITION_PRIMARY = Internal.createUniqueKey(EntityStatisticDefinition.ENTITY_STATISTIC_DEFINITION, "KEY_entity_statistic_definition_PRIMARY", EntityStatisticDefinition.ENTITY_STATISTIC_DEFINITION.ID);
        public static final UniqueKey<EntityStatisticValueRecord> KEY_ENTITY_STATISTIC_VALUE_PRIMARY = Internal.createUniqueKey(EntityStatisticValue.ENTITY_STATISTIC_VALUE, "KEY_entity_statistic_value_PRIMARY", EntityStatisticValue.ENTITY_STATISTIC_VALUE.ID);
        public static final UniqueKey<EntitySvgDiagramRecord> KEY_ENTITY_SVG_DIAGRAM_PRIMARY = Internal.createUniqueKey(EntitySvgDiagram.ENTITY_SVG_DIAGRAM, "KEY_entity_svg_diagram_PRIMARY", EntitySvgDiagram.ENTITY_SVG_DIAGRAM.ID);
        public static final UniqueKey<EntityTagRecord> KEY_ENTITY_TAG_PRIMARY = Internal.createUniqueKey(EntityTag.ENTITY_TAG, "KEY_entity_tag_PRIMARY", EntityTag.ENTITY_TAG.ENTITY_ID, EntityTag.ENTITY_TAG.ENTITY_KIND, EntityTag.ENTITY_TAG.TAG);
        public static final UniqueKey<EntityWorkflowDefinitionRecord> KEY_ENTITY_WORKFLOW_DEFINITION_PRIMARY = Internal.createUniqueKey(EntityWorkflowDefinition.ENTITY_WORKFLOW_DEFINITION, "KEY_entity_workflow_definition_PRIMARY", EntityWorkflowDefinition.ENTITY_WORKFLOW_DEFINITION.ID);
        public static final UniqueKey<EnumValueRecord> KEY_ENUM_VALUE_PRIMARY = Internal.createUniqueKey(EnumValue.ENUM_VALUE, "KEY_enum_value_PRIMARY", EnumValue.ENUM_VALUE.TYPE, EnumValue.ENUM_VALUE.KEY);
        public static final UniqueKey<FlowDiagramRecord> KEY_FLOW_DIAGRAM_PRIMARY = Internal.createUniqueKey(FlowDiagram.FLOW_DIAGRAM, "KEY_flow_diagram_PRIMARY", FlowDiagram.FLOW_DIAGRAM.ID);
        public static final UniqueKey<FlowDiagramAnnotationRecord> KEY_FLOW_DIAGRAM_ANNOTATION_PRIMARY = Internal.createUniqueKey(FlowDiagramAnnotation.FLOW_DIAGRAM_ANNOTATION, "KEY_flow_diagram_annotation_PRIMARY", FlowDiagramAnnotation.FLOW_DIAGRAM_ANNOTATION.DIAGRAM_ID, FlowDiagramAnnotation.FLOW_DIAGRAM_ANNOTATION.ANNOTATION_ID);
        public static final UniqueKey<FlowDiagramEntityRecord> KEY_FLOW_DIAGRAM_ENTITY_PRIMARY = Internal.createUniqueKey(FlowDiagramEntity.FLOW_DIAGRAM_ENTITY, "KEY_flow_diagram_entity_PRIMARY", FlowDiagramEntity.FLOW_DIAGRAM_ENTITY.DIAGRAM_ID, FlowDiagramEntity.FLOW_DIAGRAM_ENTITY.ENTITY_ID, FlowDiagramEntity.FLOW_DIAGRAM_ENTITY.ENTITY_KIND);
        public static final UniqueKey<InvolvementKindRecord> KEY_INVOLVEMENT_KIND_PRIMARY = Internal.createUniqueKey(InvolvementKind.INVOLVEMENT_KIND, "KEY_involvement_kind_PRIMARY", InvolvementKind.INVOLVEMENT_KIND.ID);
        public static final UniqueKey<InvolvementKindRecord> KEY_INVOLVEMENT_KIND_NAME = Internal.createUniqueKey(InvolvementKind.INVOLVEMENT_KIND, "KEY_involvement_kind_name", InvolvementKind.INVOLVEMENT_KIND.NAME);
        public static final UniqueKey<LogicalDataElementRecord> KEY_LOGICAL_DATA_ELEMENT_PRIMARY = Internal.createUniqueKey(LogicalDataElement.LOGICAL_DATA_ELEMENT, "KEY_logical_data_element_PRIMARY", LogicalDataElement.LOGICAL_DATA_ELEMENT.ID);
        public static final UniqueKey<LogicalFlowRecord> KEY_LOGICAL_FLOW_UNIQUE_LOGICAL_FLOW = Internal.createUniqueKey(LogicalFlow.LOGICAL_FLOW, "KEY_logical_flow_unique_logical_flow", LogicalFlow.LOGICAL_FLOW.SOURCE_ENTITY_KIND, LogicalFlow.LOGICAL_FLOW.SOURCE_ENTITY_ID, LogicalFlow.LOGICAL_FLOW.TARGET_ENTITY_KIND, LogicalFlow.LOGICAL_FLOW.TARGET_ENTITY_ID);
        public static final UniqueKey<LogicalFlowRecord> KEY_LOGICAL_FLOW_PRIMARY = Internal.createUniqueKey(LogicalFlow.LOGICAL_FLOW, "KEY_logical_flow_PRIMARY", LogicalFlow.LOGICAL_FLOW.ID);
        public static final UniqueKey<LogicalFlowDecoratorRecord> KEY_LOGICAL_FLOW_DECORATOR_PRIMARY = Internal.createUniqueKey(LogicalFlowDecorator.LOGICAL_FLOW_DECORATOR, "KEY_logical_flow_decorator_PRIMARY", LogicalFlowDecorator.LOGICAL_FLOW_DECORATOR.LOGICAL_FLOW_ID, LogicalFlowDecorator.LOGICAL_FLOW_DECORATOR.DECORATOR_ENTITY_KIND, LogicalFlowDecorator.LOGICAL_FLOW_DECORATOR.DECORATOR_ENTITY_ID);
        public static final UniqueKey<MeasurableRecord> KEY_MEASURABLE_PRIMARY = Internal.createUniqueKey(Measurable.MEASURABLE, "KEY_measurable_PRIMARY", Measurable.MEASURABLE.ID);
        public static final UniqueKey<MeasurableCategoryRecord> KEY_MEASURABLE_CATEGORY_PRIMARY = Internal.createUniqueKey(MeasurableCategory.MEASURABLE_CATEGORY, "KEY_measurable_category_PRIMARY", MeasurableCategory.MEASURABLE_CATEGORY.ID);
        public static final UniqueKey<MeasurableRatingRecord> KEY_MEASURABLE_RATING_PRIMARY = Internal.createUniqueKey(MeasurableRating.MEASURABLE_RATING, "KEY_measurable_rating_PRIMARY", MeasurableRating.MEASURABLE_RATING.ENTITY_ID, MeasurableRating.MEASURABLE_RATING.ENTITY_KIND, MeasurableRating.MEASURABLE_RATING.MEASURABLE_ID);
        public static final UniqueKey<OrganisationalUnitRecord> KEY_ORGANISATIONAL_UNIT_PRIMARY = Internal.createUniqueKey(OrganisationalUnit.ORGANISATIONAL_UNIT, "KEY_organisational_unit_PRIMARY", OrganisationalUnit.ORGANISATIONAL_UNIT.ID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = Internal.createUniqueKey(Person.PERSON, "KEY_person_PRIMARY", Person.PERSON.ID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_UNIQUE_EMPLOYEE_ID = Internal.createUniqueKey(Person.PERSON, "KEY_person_unique_employee_id", Person.PERSON.EMPLOYEE_ID);
        public static final UniqueKey<PersonHierarchyRecord> KEY_PERSON_HIERARCHY_PRIMARY = Internal.createUniqueKey(PersonHierarchy.PERSON_HIERARCHY, "KEY_person_hierarchy_PRIMARY", PersonHierarchy.PERSON_HIERARCHY.MANAGER_ID, PersonHierarchy.PERSON_HIERARCHY.EMPLOYEE_ID);
        public static final UniqueKey<PerspectiveDefinitionRecord> KEY_PERSPECTIVE_DEFINITION_PRIMARY = Internal.createUniqueKey(PerspectiveDefinition.PERSPECTIVE_DEFINITION, "KEY_perspective_definition_PRIMARY", PerspectiveDefinition.PERSPECTIVE_DEFINITION.ID);
        public static final UniqueKey<PerspectiveRatingRecord> KEY_PERSPECTIVE_RATING_PRIMARY = Internal.createUniqueKey(PerspectiveRating.PERSPECTIVE_RATING, "KEY_perspective_rating_PRIMARY", PerspectiveRating.PERSPECTIVE_RATING.ENTITY_ID, PerspectiveRating.PERSPECTIVE_RATING.MEASURABLE_X, PerspectiveRating.PERSPECTIVE_RATING.MEASURABLE_Y, PerspectiveRating.PERSPECTIVE_RATING.ENTITY_KIND);
        public static final UniqueKey<PhysicalFlowRecord> KEY_PHYSICAL_FLOW_PRIMARY = Internal.createUniqueKey(PhysicalFlow.PHYSICAL_FLOW, "KEY_physical_flow_PRIMARY", PhysicalFlow.PHYSICAL_FLOW.ID);
        public static final UniqueKey<PhysicalSpecificationRecord> KEY_PHYSICAL_SPECIFICATION_PRIMARY = Internal.createUniqueKey(PhysicalSpecification.PHYSICAL_SPECIFICATION, "KEY_physical_specification_PRIMARY", PhysicalSpecification.PHYSICAL_SPECIFICATION.ID);
        public static final UniqueKey<PhysicalSpecDataTypeRecord> KEY_PHYSICAL_SPEC_DATA_TYPE_PRIMARY = Internal.createUniqueKey(PhysicalSpecDataType.PHYSICAL_SPEC_DATA_TYPE, "KEY_physical_spec_data_type_PRIMARY", PhysicalSpecDataType.PHYSICAL_SPEC_DATA_TYPE.SPECIFICATION_ID, PhysicalSpecDataType.PHYSICAL_SPEC_DATA_TYPE.DATA_TYPE_ID);
        public static final UniqueKey<PhysicalSpecDefnRecord> KEY_PHYSICAL_SPEC_DEFN_PRIMARY = Internal.createUniqueKey(PhysicalSpecDefn.PHYSICAL_SPEC_DEFN, "KEY_physical_spec_defn_PRIMARY", PhysicalSpecDefn.PHYSICAL_SPEC_DEFN.ID);
        public static final UniqueKey<PhysicalSpecDefnRecord> KEY_PHYSICAL_SPEC_DEFN_PHY_SPEC_DEFN_UNIQUE_VERSION = Internal.createUniqueKey(PhysicalSpecDefn.PHYSICAL_SPEC_DEFN, "KEY_physical_spec_defn_phy_spec_defn_unique_version", PhysicalSpecDefn.PHYSICAL_SPEC_DEFN.SPECIFICATION_ID, PhysicalSpecDefn.PHYSICAL_SPEC_DEFN.VERSION);
        public static final UniqueKey<PhysicalSpecDefnFieldRecord> KEY_PHYSICAL_SPEC_DEFN_FIELD_PRIMARY = Internal.createUniqueKey(PhysicalSpecDefnField.PHYSICAL_SPEC_DEFN_FIELD, "KEY_physical_spec_defn_field_PRIMARY", PhysicalSpecDefnField.PHYSICAL_SPEC_DEFN_FIELD.ID);
        public static final UniqueKey<PhysicalSpecDefnSampleFileRecord> KEY_PHYSICAL_SPEC_DEFN_SAMPLE_FILE_PRIMARY = Internal.createUniqueKey(PhysicalSpecDefnSampleFile.PHYSICAL_SPEC_DEFN_SAMPLE_FILE, "KEY_physical_spec_defn_sample_file_PRIMARY", PhysicalSpecDefnSampleFile.PHYSICAL_SPEC_DEFN_SAMPLE_FILE.ID);
        public static final UniqueKey<RatingSchemeRecord> KEY_RATING_SCHEME_PRIMARY = Internal.createUniqueKey(RatingScheme.RATING_SCHEME, "KEY_rating_scheme_PRIMARY", RatingScheme.RATING_SCHEME.ID);
        public static final UniqueKey<RatingSchemeItemRecord> KEY_RATING_SCHEME_ITEM_PRIMARY = Internal.createUniqueKey(RatingSchemeItem.RATING_SCHEME_ITEM, "KEY_rating_scheme_item_PRIMARY", RatingSchemeItem.RATING_SCHEME_ITEM.ID);
        public static final UniqueKey<RatingSchemeItemRecord> KEY_RATING_SCHEME_ITEM_IDX_RATING_SCHEME_ITEM_UNIQUE = Internal.createUniqueKey(RatingSchemeItem.RATING_SCHEME_ITEM, "KEY_rating_scheme_item_idx_rating_scheme_item_unique", RatingSchemeItem.RATING_SCHEME_ITEM.SCHEME_ID, RatingSchemeItem.RATING_SCHEME_ITEM.CODE);
        public static final UniqueKey<RoadmapRecord> KEY_ROADMAP_PRIMARY = Internal.createUniqueKey(Roadmap.ROADMAP, "KEY_roadmap_PRIMARY", Roadmap.ROADMAP.ID);
        public static final UniqueKey<ScenarioRecord> KEY_SCENARIO_PRIMARY = Internal.createUniqueKey(Scenario.SCENARIO, "KEY_scenario_PRIMARY", Scenario.SCENARIO.ID);
        public static final UniqueKey<ScenarioAxisItemRecord> KEY_SCENARIO_AXIS_ITEM_PRIMARY = Internal.createUniqueKey(ScenarioAxisItem.SCENARIO_AXIS_ITEM, "KEY_scenario_axis_item_PRIMARY", ScenarioAxisItem.SCENARIO_AXIS_ITEM.ID);
        public static final UniqueKey<ScenarioAxisItemRecord> KEY_SCENARIO_AXIS_ITEM_IDX_SCENARIO_AXIS_UNIQ = Internal.createUniqueKey(ScenarioAxisItem.SCENARIO_AXIS_ITEM, "KEY_scenario_axis_item_idx_scenario_axis_uniq", ScenarioAxisItem.SCENARIO_AXIS_ITEM.SCENARIO_ID, ScenarioAxisItem.SCENARIO_AXIS_ITEM.ORIENTATION, ScenarioAxisItem.SCENARIO_AXIS_ITEM.DOMAIN_ITEM_KIND, ScenarioAxisItem.SCENARIO_AXIS_ITEM.DOMAIN_ITEM_ID);
        public static final UniqueKey<ScenarioRatingItemRecord> KEY_SCENARIO_RATING_ITEM_PRIMARY = Internal.createUniqueKey(ScenarioRatingItem.SCENARIO_RATING_ITEM, "KEY_scenario_rating_item_PRIMARY", ScenarioRatingItem.SCENARIO_RATING_ITEM.ID);
        public static final UniqueKey<ServerInformationRecord> KEY_SERVER_INFORMATION_PRIMARY = Internal.createUniqueKey(ServerInformation.SERVER_INFORMATION, "KEY_server_information_PRIMARY", ServerInformation.SERVER_INFORMATION.ID);
        public static final UniqueKey<SettingsRecord> KEY_SETTINGS_PRIMARY = Internal.createUniqueKey(Settings.SETTINGS, "KEY_settings_PRIMARY", Settings.SETTINGS.NAME);
        public static final UniqueKey<SharedPreferenceRecord> KEY_SHARED_PREFERENCE_PRIMARY = Internal.createUniqueKey(SharedPreference.SHARED_PREFERENCE, "KEY_shared_preference_PRIMARY", SharedPreference.SHARED_PREFERENCE.KEY, SharedPreference.SHARED_PREFERENCE.CATEGORY);
        public static final UniqueKey<SoftwarePackageRecord> KEY_SOFTWARE_PACKAGE_PRIMARY = Internal.createUniqueKey(SoftwarePackage.SOFTWARE_PACKAGE, "KEY_software_package_PRIMARY", SoftwarePackage.SOFTWARE_PACKAGE.ID);
        public static final UniqueKey<SourceDataRatingRecord> KEY_SOURCE_DATA_RATING_PRIMARY = Internal.createUniqueKey(SourceDataRating.SOURCE_DATA_RATING, "KEY_source_data_rating_PRIMARY", SourceDataRating.SOURCE_DATA_RATING.SOURCE_NAME, SourceDataRating.SOURCE_DATA_RATING.ENTITY_KIND);
        public static final UniqueKey<StaticPanelRecord> KEY_STATIC_PANEL_PRIMARY = Internal.createUniqueKey(StaticPanel.STATIC_PANEL, "KEY_static_panel_PRIMARY", StaticPanel.STATIC_PANEL.ID);
        public static final UniqueKey<SurveyInstanceRecord> KEY_SURVEY_INSTANCE_PRIMARY = Internal.createUniqueKey(SurveyInstance.SURVEY_INSTANCE, "KEY_survey_instance_PRIMARY", SurveyInstance.SURVEY_INSTANCE.ID);
        public static final UniqueKey<SurveyInstanceRecipientRecord> KEY_SURVEY_INSTANCE_RECIPIENT_PRIMARY = Internal.createUniqueKey(SurveyInstanceRecipient.SURVEY_INSTANCE_RECIPIENT, "KEY_survey_instance_recipient_PRIMARY", SurveyInstanceRecipient.SURVEY_INSTANCE_RECIPIENT.ID);
        public static final UniqueKey<SurveyQuestionRecord> KEY_SURVEY_QUESTION_PRIMARY = Internal.createUniqueKey(SurveyQuestion.SURVEY_QUESTION, "KEY_survey_question_PRIMARY", SurveyQuestion.SURVEY_QUESTION.ID);
        public static final UniqueKey<SurveyQuestionDropdownEntryRecord> KEY_SURVEY_QUESTION_DROPDOWN_ENTRY_PRIMARY = Internal.createUniqueKey(SurveyQuestionDropdownEntry.SURVEY_QUESTION_DROPDOWN_ENTRY, "KEY_survey_question_dropdown_entry_PRIMARY", SurveyQuestionDropdownEntry.SURVEY_QUESTION_DROPDOWN_ENTRY.ID);
        public static final UniqueKey<SurveyQuestionResponseRecord> KEY_SURVEY_QUESTION_RESPONSE_PRIMARY = Internal.createUniqueKey(SurveyQuestionResponse.SURVEY_QUESTION_RESPONSE, "KEY_survey_question_response_PRIMARY", SurveyQuestionResponse.SURVEY_QUESTION_RESPONSE.SURVEY_INSTANCE_ID, SurveyQuestionResponse.SURVEY_QUESTION_RESPONSE.QUESTION_ID);
        public static final UniqueKey<SurveyRunRecord> KEY_SURVEY_RUN_PRIMARY = Internal.createUniqueKey(SurveyRun.SURVEY_RUN, "KEY_survey_run_PRIMARY", SurveyRun.SURVEY_RUN.ID);
        public static final UniqueKey<SurveyTemplateRecord> KEY_SURVEY_TEMPLATE_PRIMARY = Internal.createUniqueKey(SurveyTemplate.SURVEY_TEMPLATE, "KEY_survey_template_PRIMARY", SurveyTemplate.SURVEY_TEMPLATE.ID);
        public static final UniqueKey<SurveyTemplateRecord> KEY_SURVEY_TEMPLATE_SURVEY_TEMPLATE_UNIQUE_NAME = Internal.createUniqueKey(SurveyTemplate.SURVEY_TEMPLATE, "KEY_survey_template_survey_template_unique_name", SurveyTemplate.SURVEY_TEMPLATE.NAME);
        public static final UniqueKey<SvgDiagramRecord> KEY_SVG_DIAGRAM_PRIMARY = Internal.createUniqueKey(SvgDiagram.SVG_DIAGRAM, "KEY_svg_diagram_PRIMARY", SvgDiagram.SVG_DIAGRAM.ID);
        public static final UniqueKey<SystemJobLogRecord> KEY_SYSTEM_JOB_LOG_PRIMARY = Internal.createUniqueKey(SystemJobLog.SYSTEM_JOB_LOG, "KEY_system_job_log_PRIMARY", SystemJobLog.SYSTEM_JOB_LOG.NAME, SystemJobLog.SYSTEM_JOB_LOG.ENTITY_KIND, SystemJobLog.SYSTEM_JOB_LOG.START);
        public static final UniqueKey<TourRecord> KEY_TOUR_PRIMARY = Internal.createUniqueKey(Tour.TOUR, "KEY_tour_PRIMARY", Tour.TOUR.TOUR_KEY, Tour.TOUR.STEP_ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.USER_NAME);
        public static final UniqueKey<UserAgentInfoRecord> KEY_USER_AGENT_INFO_PRIMARY = Internal.createUniqueKey(UserAgentInfo.USER_AGENT_INFO, "KEY_user_agent_info_PRIMARY", UserAgentInfo.USER_AGENT_INFO.ID);
        public static final UniqueKey<UserPreferenceRecord> KEY_USER_PREFERENCE_PRIMARY = Internal.createUniqueKey(UserPreference.USER_PREFERENCE, "KEY_user_preference_PRIMARY", UserPreference.USER_PREFERENCE.USER_NAME, UserPreference.USER_PREFERENCE.KEY);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ApplicationGroupEntryRecord, ApplicationGroupRecord> APPLICATION_GROUP_ENTRY_GROUP_ID_FKEY = Internal.createForeignKey(com.khartec.waltz.schema.Keys.KEY_APPLICATION_GROUP_PRIMARY, ApplicationGroupEntry.APPLICATION_GROUP_ENTRY, "application_group_entry_group_id_fkey", ApplicationGroupEntry.APPLICATION_GROUP_ENTRY.GROUP_ID);
        public static final ForeignKey<ApplicationGroupMemberRecord, ApplicationGroupRecord> APPLICATION_GROUP_MEMBER_GROUP_ID_FKEY = Internal.createForeignKey(com.khartec.waltz.schema.Keys.KEY_APPLICATION_GROUP_PRIMARY, ApplicationGroupMember.APPLICATION_GROUP_MEMBER, "application_group_member_group_id_fkey", ApplicationGroupMember.APPLICATION_GROUP_MEMBER.GROUP_ID);
        public static final ForeignKey<UserRoleRecord, UserRecord> USER_ROLE_USER_NAME_FKEY = Internal.createForeignKey(com.khartec.waltz.schema.Keys.KEY_USER_PRIMARY, UserRole.USER_ROLE, "user_role_user_name_fkey", UserRole.USER_ROLE.USER_NAME);
    }
}
