/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.Tour;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TourRecord extends UpdatableRecordImpl<TourRecord> implements Record5<String, Integer, String, String, String> {

    private static final long serialVersionUID = 2132045881;

    /**
     * Setter for <code>tour.tour_key</code>.
     */
    public void setTourKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tour.tour_key</code>.
     */
    public String getTourKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tour.step_id</code>.
     */
    public void setStepId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>tour.step_id</code>.
     */
    public Integer getStepId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>tour.selector</code>.
     */
    public void setSelector(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tour.selector</code>.
     */
    public String getSelector() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tour.position</code>.
     */
    public void setPosition(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>tour.position</code>.
     */
    public String getPosition() {
        return (String) get(3);
    }

    /**
     * Setter for <code>tour.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>tour.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Integer, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Integer, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tour.TOUR.TOUR_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Tour.TOUR.STEP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tour.TOUR.SELECTOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Tour.TOUR.POSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Tour.TOUR.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getTourKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getStepId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSelector();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTourKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getStepId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSelector();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TourRecord value1(String value) {
        setTourKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TourRecord value2(Integer value) {
        setStepId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TourRecord value3(String value) {
        setSelector(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TourRecord value4(String value) {
        setPosition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TourRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TourRecord values(String value1, Integer value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TourRecord
     */
    public TourRecord() {
        super(Tour.TOUR);
    }

    /**
     * Create a detached, initialised TourRecord
     */
    public TourRecord(String tourKey, Integer stepId, String selector, String position, String description) {
        super(Tour.TOUR);

        set(0, tourKey);
        set(1, stepId);
        set(2, selector);
        set(3, position);
        set(4, description);
    }
}
