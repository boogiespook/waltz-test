/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.PersonHierarchyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonHierarchy extends TableImpl<PersonHierarchyRecord> {

    private static final long serialVersionUID = -908419616;

    /**
     * The reference instance of <code>person_hierarchy</code>
     */
    public static final PersonHierarchy PERSON_HIERARCHY = new PersonHierarchy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonHierarchyRecord> getRecordType() {
        return PersonHierarchyRecord.class;
    }

    /**
     * The column <code>person_hierarchy.manager_id</code>.
     */
    public final TableField<PersonHierarchyRecord, String> MANAGER_ID = createField("manager_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>person_hierarchy.employee_id</code>.
     */
    public final TableField<PersonHierarchyRecord, String> EMPLOYEE_ID = createField("employee_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>person_hierarchy.level</code>.
     */
    public final TableField<PersonHierarchyRecord, Integer> LEVEL = createField("level", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("99", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>person_hierarchy</code> table reference
     */
    public PersonHierarchy() {
        this(DSL.name("person_hierarchy"), null);
    }

    /**
     * Create an aliased <code>person_hierarchy</code> table reference
     */
    public PersonHierarchy(String alias) {
        this(DSL.name(alias), PERSON_HIERARCHY);
    }

    /**
     * Create an aliased <code>person_hierarchy</code> table reference
     */
    public PersonHierarchy(Name alias) {
        this(alias, PERSON_HIERARCHY);
    }

    private PersonHierarchy(Name alias, Table<PersonHierarchyRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonHierarchy(Name alias, Table<PersonHierarchyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSON_HIERARCHY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonHierarchyRecord> getPrimaryKey() {
        return Keys.KEY_PERSON_HIERARCHY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonHierarchyRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonHierarchyRecord>>asList(Keys.KEY_PERSON_HIERARCHY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonHierarchy as(String alias) {
        return new PersonHierarchy(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonHierarchy as(Name alias) {
        return new PersonHierarchy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonHierarchy rename(String name) {
        return new PersonHierarchy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonHierarchy rename(Name name) {
        return new PersonHierarchy(name, null);
    }
}
