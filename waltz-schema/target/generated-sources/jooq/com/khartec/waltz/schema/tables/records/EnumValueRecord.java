/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.EnumValue;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Store enum values - display names, descriptions and icon names
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnumValueRecord extends UpdatableRecordImpl<EnumValueRecord> implements Record6<String, String, String, String, String, Integer> {

    private static final long serialVersionUID = 1403076982;

    /**
     * Setter for <code>enum_value.type</code>.
     */
    public void setType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>enum_value.type</code>.
     */
    public String getType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>enum_value.key</code>.
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>enum_value.key</code>.
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>enum_value.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>enum_value.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>enum_value.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>enum_value.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>enum_value.icon_name</code>. The default value fw, stands for fixed-width which acts like a spacer icon
     */
    public void setIconName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>enum_value.icon_name</code>. The default value fw, stands for fixed-width which acts like a spacer icon
     */
    public String getIconName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>enum_value.position</code>.
     */
    public void setPosition(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>enum_value.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, String, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return EnumValue.ENUM_VALUE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return EnumValue.ENUM_VALUE.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return EnumValue.ENUM_VALUE.DISPLAY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return EnumValue.ENUM_VALUE.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return EnumValue.ENUM_VALUE.ICON_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return EnumValue.ENUM_VALUE.POSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getIconName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getIconName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord value1(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord value2(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord value3(String value) {
        setDisplayName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord value5(String value) {
        setIconName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord value6(Integer value) {
        setPosition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumValueRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EnumValueRecord
     */
    public EnumValueRecord() {
        super(EnumValue.ENUM_VALUE);
    }

    /**
     * Create a detached, initialised EnumValueRecord
     */
    public EnumValueRecord(String type, String key, String displayName, String description, String iconName, Integer position) {
        super(EnumValue.ENUM_VALUE);

        set(0, type);
        set(1, key);
        set(2, displayName);
        set(3, description);
        set(4, iconName);
        set(5, position);
    }
}
