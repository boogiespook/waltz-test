/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.Bookmark;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarkRecord extends UpdatableRecordImpl<BookmarkRecord> implements Record13<Long, String, String, String, String, String, Long, Timestamp, Timestamp, Boolean, String, String, Boolean> {

    private static final long serialVersionUID = -196612364;

    /**
     * Setter for <code>bookmark.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookmark.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>bookmark.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookmark.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bookmark.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookmark.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bookmark.kind</code>.
     */
    public void setKind(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bookmark.kind</code>.
     */
    public String getKind() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bookmark.url</code>.
     */
    public void setUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bookmark.url</code>.
     */
    public String getUrl() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bookmark.parent_kind</code>.
     */
    public void setParentKind(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>bookmark.parent_kind</code>.
     */
    public String getParentKind() {
        return (String) get(5);
    }

    /**
     * Setter for <code>bookmark.parent_id</code>.
     */
    public void setParentId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>bookmark.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>bookmark.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>bookmark.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>bookmark.updated_at</code>.
     */
    public void setUpdatedAt(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>bookmark.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>bookmark.is_primary</code>.
     */
    public void setIsPrimary(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>bookmark.is_primary</code>.
     */
    public Boolean getIsPrimary() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>bookmark.provenance</code>.
     */
    public void setProvenance(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>bookmark.provenance</code>.
     */
    public String getProvenance() {
        return (String) get(10);
    }

    /**
     * Setter for <code>bookmark.last_updated_by</code>.
     */
    public void setLastUpdatedBy(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>bookmark.last_updated_by</code>.
     */
    public String getLastUpdatedBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>bookmark.is_required</code>.
     */
    public void setIsRequired(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>bookmark.is_required</code>.
     */
    public Boolean getIsRequired() {
        return (Boolean) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, String, String, Long, Timestamp, Timestamp, Boolean, String, String, Boolean> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, String, String, Long, Timestamp, Timestamp, Boolean, String, String, Boolean> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Bookmark.BOOKMARK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Bookmark.BOOKMARK.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Bookmark.BOOKMARK.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Bookmark.BOOKMARK.KIND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Bookmark.BOOKMARK.URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Bookmark.BOOKMARK.PARENT_KIND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Bookmark.BOOKMARK.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Bookmark.BOOKMARK.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Bookmark.BOOKMARK.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return Bookmark.BOOKMARK.IS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Bookmark.BOOKMARK.PROVENANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Bookmark.BOOKMARK.LAST_UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field13() {
        return Bookmark.BOOKMARK.IS_REQUIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getKind();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getParentKind();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getIsPrimary();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getProvenance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getLastUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component13() {
        return getIsRequired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getKind();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getParentKind();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getIsPrimary();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getProvenance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getLastUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value13() {
        return getIsRequired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value4(String value) {
        setKind(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value5(String value) {
        setUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value6(String value) {
        setParentKind(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value7(Long value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value8(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value9(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value10(Boolean value) {
        setIsPrimary(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value11(String value) {
        setProvenance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value12(String value) {
        setLastUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord value13(Boolean value) {
        setIsRequired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookmarkRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Long value7, Timestamp value8, Timestamp value9, Boolean value10, String value11, String value12, Boolean value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookmarkRecord
     */
    public BookmarkRecord() {
        super(Bookmark.BOOKMARK);
    }

    /**
     * Create a detached, initialised BookmarkRecord
     */
    public BookmarkRecord(Long id, String title, String description, String kind, String url, String parentKind, Long parentId, Timestamp createdAt, Timestamp updatedAt, Boolean isPrimary, String provenance, String lastUpdatedBy, Boolean isRequired) {
        super(Bookmark.BOOKMARK);

        set(0, id);
        set(1, title);
        set(2, description);
        set(3, kind);
        set(4, url);
        set(5, parentKind);
        set(6, parentId);
        set(7, createdAt);
        set(8, updatedAt);
        set(9, isPrimary);
        set(10, provenance);
        set(11, lastUpdatedBy);
        set(12, isRequired);
    }
}
