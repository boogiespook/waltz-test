/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.tables.records.AssetCostRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetCost extends TableImpl<AssetCostRecord> {

    private static final long serialVersionUID = 861299291;

    /**
     * The reference instance of <code>asset_cost</code>
     */
    public static final AssetCost ASSET_COST = new AssetCost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssetCostRecord> getRecordType() {
        return AssetCostRecord.class;
    }

    /**
     * The column <code>asset_cost.asset_code</code>.
     */
    public final TableField<AssetCostRecord, String> ASSET_CODE = createField("asset_code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>asset_cost.year</code>.
     */
    public final TableField<AssetCostRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>asset_cost.kind</code>.
     */
    public final TableField<AssetCostRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>asset_cost.amount</code>.
     */
    public final TableField<AssetCostRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "");

    /**
     * The column <code>asset_cost.provenance</code>.
     */
    public final TableField<AssetCostRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'waltz'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>asset_cost</code> table reference
     */
    public AssetCost() {
        this(DSL.name("asset_cost"), null);
    }

    /**
     * Create an aliased <code>asset_cost</code> table reference
     */
    public AssetCost(String alias) {
        this(DSL.name(alias), ASSET_COST);
    }

    /**
     * Create an aliased <code>asset_cost</code> table reference
     */
    public AssetCost(Name alias) {
        this(alias, ASSET_COST);
    }

    private AssetCost(Name alias, Table<AssetCostRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssetCost(Name alias, Table<AssetCostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASSET_COST_IDX_ASSET_COST_YR, Indexes.ASSET_COST_IDX_ASSET_COST_YR_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetCost as(String alias) {
        return new AssetCost(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetCost as(Name alias) {
        return new AssetCost(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetCost rename(String name) {
        return new AssetCost(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetCost rename(Name name) {
        return new AssetCost(name, null);
    }
}
