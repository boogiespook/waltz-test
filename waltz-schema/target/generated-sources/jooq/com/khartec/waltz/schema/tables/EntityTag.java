/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.EntityTagRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Allows for association of zero or more tags with entities
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityTag extends TableImpl<EntityTagRecord> {

    private static final long serialVersionUID = 1562146144;

    /**
     * The reference instance of <code>entity_tag</code>
     */
    public static final EntityTag ENTITY_TAG = new EntityTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityTagRecord> getRecordType() {
        return EntityTagRecord.class;
    }

    /**
     * The column <code>entity_tag.entity_id</code>.
     */
    public final TableField<EntityTagRecord, Long> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>entity_tag.entity_kind</code>.
     */
    public final TableField<EntityTagRecord, String> ENTITY_KIND = createField("entity_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>entity_tag.tag</code>.
     */
    public final TableField<EntityTagRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>entity_tag.last_updated_at</code>.
     */
    public final TableField<EntityTagRecord, Timestamp> LAST_UPDATED_AT = createField("last_updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>entity_tag.last_updated_by</code>.
     */
    public final TableField<EntityTagRecord, String> LAST_UPDATED_BY = createField("last_updated_by", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>entity_tag.provenance</code>.
     */
    public final TableField<EntityTagRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>entity_tag</code> table reference
     */
    public EntityTag() {
        this(DSL.name("entity_tag"), null);
    }

    /**
     * Create an aliased <code>entity_tag</code> table reference
     */
    public EntityTag(String alias) {
        this(DSL.name(alias), ENTITY_TAG);
    }

    /**
     * Create an aliased <code>entity_tag</code> table reference
     */
    public EntityTag(Name alias) {
        this(alias, ENTITY_TAG);
    }

    private EntityTag(Name alias, Table<EntityTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityTag(Name alias, Table<EntityTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Allows for association of zero or more tags with entities");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTITY_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityTagRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_TAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityTagRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityTagRecord>>asList(Keys.KEY_ENTITY_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityTag as(String alias) {
        return new EntityTag(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityTag as(Name alias) {
        return new EntityTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityTag rename(String name) {
        return new EntityTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityTag rename(Name name) {
        return new EntityTag(name, null);
    }
}
