/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.RoadmapRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roadmap extends TableImpl<RoadmapRecord> {

    private static final long serialVersionUID = 797389599;

    /**
     * The reference instance of <code>roadmap</code>
     */
    public static final Roadmap ROADMAP = new Roadmap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoadmapRecord> getRecordType() {
        return RoadmapRecord.class;
    }

    /**
     * The column <code>roadmap.id</code>.
     */
    public final TableField<RoadmapRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>roadmap.name</code>.
     */
    public final TableField<RoadmapRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>roadmap.description</code>.
     */
    public final TableField<RoadmapRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>roadmap.row_type_kind</code>.
     */
    public final TableField<RoadmapRecord, String> ROW_TYPE_KIND = createField("row_type_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>roadmap.rating_scheme_id</code>.
     */
    public final TableField<RoadmapRecord, Long> RATING_SCHEME_ID = createField("rating_scheme_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>roadmap.row_type_id</code>.
     */
    public final TableField<RoadmapRecord, Long> ROW_TYPE_ID = createField("row_type_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>roadmap.column_type_kind</code>.
     */
    public final TableField<RoadmapRecord, String> COLUMN_TYPE_KIND = createField("column_type_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>roadmap.column_type_id</code>.
     */
    public final TableField<RoadmapRecord, Long> COLUMN_TYPE_ID = createField("column_type_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>roadmap.last_updated_at</code>.
     */
    public final TableField<RoadmapRecord, Timestamp> LAST_UPDATED_AT = createField("last_updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>roadmap.last_updated_by</code>.
     */
    public final TableField<RoadmapRecord, String> LAST_UPDATED_BY = createField("last_updated_by", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>roadmap.entity_lifecycle_status</code>.
     */
    public final TableField<RoadmapRecord, String> ENTITY_LIFECYCLE_STATUS = createField("entity_lifecycle_status", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'ACTIVE'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>roadmap</code> table reference
     */
    public Roadmap() {
        this(DSL.name("roadmap"), null);
    }

    /**
     * Create an aliased <code>roadmap</code> table reference
     */
    public Roadmap(String alias) {
        this(DSL.name(alias), ROADMAP);
    }

    /**
     * Create an aliased <code>roadmap</code> table reference
     */
    public Roadmap(Name alias) {
        this(alias, ROADMAP);
    }

    private Roadmap(Name alias, Table<RoadmapRecord> aliased) {
        this(alias, aliased, null);
    }

    private Roadmap(Name alias, Table<RoadmapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROADMAP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoadmapRecord, Long> getIdentity() {
        return Keys.IDENTITY_ROADMAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoadmapRecord> getPrimaryKey() {
        return Keys.KEY_ROADMAP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoadmapRecord>> getKeys() {
        return Arrays.<UniqueKey<RoadmapRecord>>asList(Keys.KEY_ROADMAP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roadmap as(String alias) {
        return new Roadmap(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roadmap as(Name alias) {
        return new Roadmap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Roadmap rename(String name) {
        return new Roadmap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Roadmap rename(Name name) {
        return new Roadmap(name, null);
    }
}
