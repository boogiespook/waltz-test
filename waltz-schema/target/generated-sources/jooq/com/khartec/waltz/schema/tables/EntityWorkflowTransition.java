/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.tables.records.EntityWorkflowTransitionRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Store entity workflow transitions
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityWorkflowTransition extends TableImpl<EntityWorkflowTransitionRecord> {

    private static final long serialVersionUID = 1522092385;

    /**
     * The reference instance of <code>entity_workflow_transition</code>
     */
    public static final EntityWorkflowTransition ENTITY_WORKFLOW_TRANSITION = new EntityWorkflowTransition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityWorkflowTransitionRecord> getRecordType() {
        return EntityWorkflowTransitionRecord.class;
    }

    /**
     * The column <code>entity_workflow_transition.workflow_id</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, Long> WORKFLOW_ID = createField("workflow_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>entity_workflow_transition.entity_id</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, Long> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>entity_workflow_transition.entity_kind</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, String> ENTITY_KIND = createField("entity_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>entity_workflow_transition.from_state</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, String> FROM_STATE = createField("from_state", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>entity_workflow_transition.to_state</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, String> TO_STATE = createField("to_state", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>entity_workflow_transition.reason</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>entity_workflow_transition.last_updated_at</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, Timestamp> LAST_UPDATED_AT = createField("last_updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>entity_workflow_transition.last_updated_by</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, String> LAST_UPDATED_BY = createField("last_updated_by", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>entity_workflow_transition.provenance</code>.
     */
    public final TableField<EntityWorkflowTransitionRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>entity_workflow_transition</code> table reference
     */
    public EntityWorkflowTransition() {
        this(DSL.name("entity_workflow_transition"), null);
    }

    /**
     * Create an aliased <code>entity_workflow_transition</code> table reference
     */
    public EntityWorkflowTransition(String alias) {
        this(DSL.name(alias), ENTITY_WORKFLOW_TRANSITION);
    }

    /**
     * Create an aliased <code>entity_workflow_transition</code> table reference
     */
    public EntityWorkflowTransition(Name alias) {
        this(alias, ENTITY_WORKFLOW_TRANSITION);
    }

    private EntityWorkflowTransition(Name alias, Table<EntityWorkflowTransitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityWorkflowTransition(Name alias, Table<EntityWorkflowTransitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Store entity workflow transitions");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityWorkflowTransition as(String alias) {
        return new EntityWorkflowTransition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityWorkflowTransition as(Name alias) {
        return new EntityWorkflowTransition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityWorkflowTransition rename(String name) {
        return new EntityWorkflowTransition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityWorkflowTransition rename(Name name) {
        return new EntityWorkflowTransition(name, null);
    }
}
