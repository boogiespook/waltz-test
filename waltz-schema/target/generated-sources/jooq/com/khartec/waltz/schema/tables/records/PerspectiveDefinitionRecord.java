/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.PerspectiveDefinition;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PerspectiveDefinitionRecord extends UpdatableRecordImpl<PerspectiveDefinitionRecord> implements Record6<Long, String, String, Long, Long, Long> {

    private static final long serialVersionUID = -907714992;

    /**
     * Setter for <code>perspective_definition.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>perspective_definition.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>perspective_definition.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>perspective_definition.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>perspective_definition.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>perspective_definition.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>perspective_definition.category_x</code>.
     */
    public void setCategoryX(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>perspective_definition.category_x</code>.
     */
    public Long getCategoryX() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>perspective_definition.category_y</code>.
     */
    public void setCategoryY(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>perspective_definition.category_y</code>.
     */
    public Long getCategoryY() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>perspective_definition.rating_scheme_id</code>.
     */
    public void setRatingSchemeId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>perspective_definition.rating_scheme_id</code>.
     */
    public Long getRatingSchemeId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PerspectiveDefinition.PERSPECTIVE_DEFINITION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PerspectiveDefinition.PERSPECTIVE_DEFINITION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PerspectiveDefinition.PERSPECTIVE_DEFINITION.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return PerspectiveDefinition.PERSPECTIVE_DEFINITION.CATEGORY_X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return PerspectiveDefinition.PERSPECTIVE_DEFINITION.CATEGORY_Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return PerspectiveDefinition.PERSPECTIVE_DEFINITION.RATING_SCHEME_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCategoryX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component5() {
        return getCategoryY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getRatingSchemeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCategoryX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getCategoryY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getRatingSchemeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord value4(Long value) {
        setCategoryX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord value5(Long value) {
        setCategoryY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord value6(Long value) {
        setRatingSchemeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerspectiveDefinitionRecord values(Long value1, String value2, String value3, Long value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PerspectiveDefinitionRecord
     */
    public PerspectiveDefinitionRecord() {
        super(PerspectiveDefinition.PERSPECTIVE_DEFINITION);
    }

    /**
     * Create a detached, initialised PerspectiveDefinitionRecord
     */
    public PerspectiveDefinitionRecord(Long id, String name, String description, Long categoryX, Long categoryY, Long ratingSchemeId) {
        super(PerspectiveDefinition.PERSPECTIVE_DEFINITION);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, categoryX);
        set(4, categoryY);
        set(5, ratingSchemeId);
    }
}
