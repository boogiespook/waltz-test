/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.SurveyQuestionResponseRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SurveyQuestionResponse extends TableImpl<SurveyQuestionResponseRecord> {

    private static final long serialVersionUID = -1131611748;

    /**
     * The reference instance of <code>survey_question_response</code>
     */
    public static final SurveyQuestionResponse SURVEY_QUESTION_RESPONSE = new SurveyQuestionResponse();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SurveyQuestionResponseRecord> getRecordType() {
        return SurveyQuestionResponseRecord.class;
    }

    /**
     * The column <code>survey_question_response.survey_instance_id</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Long> SURVEY_INSTANCE_ID = createField("survey_instance_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>survey_question_response.question_id</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Long> QUESTION_ID = createField("question_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>survey_question_response.person_id</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>survey_question_response.comment</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>survey_question_response.last_updated_at</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Timestamp> LAST_UPDATED_AT = createField("last_updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>survey_question_response.string_response</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, String> STRING_RESPONSE = createField("string_response", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>survey_question_response.number_response</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, BigDecimal> NUMBER_RESPONSE = createField("number_response", org.jooq.impl.SQLDataType.DECIMAL(19, 4).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>survey_question_response.boolean_response</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Boolean> BOOLEAN_RESPONSE = createField("boolean_response", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>survey_question_response.entity_response_id</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Long> ENTITY_RESPONSE_ID = createField("entity_response_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>survey_question_response.entity_response_kind</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, String> ENTITY_RESPONSE_KIND = createField("entity_response_kind", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>survey_question_response.date_response</code>.
     */
    public final TableField<SurveyQuestionResponseRecord, Date> DATE_RESPONSE = createField("date_response", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * Create a <code>survey_question_response</code> table reference
     */
    public SurveyQuestionResponse() {
        this(DSL.name("survey_question_response"), null);
    }

    /**
     * Create an aliased <code>survey_question_response</code> table reference
     */
    public SurveyQuestionResponse(String alias) {
        this(DSL.name(alias), SURVEY_QUESTION_RESPONSE);
    }

    /**
     * Create an aliased <code>survey_question_response</code> table reference
     */
    public SurveyQuestionResponse(Name alias) {
        this(alias, SURVEY_QUESTION_RESPONSE);
    }

    private SurveyQuestionResponse(Name alias, Table<SurveyQuestionResponseRecord> aliased) {
        this(alias, aliased, null);
    }

    private SurveyQuestionResponse(Name alias, Table<SurveyQuestionResponseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SURVEY_QUESTION_RESPONSE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SurveyQuestionResponseRecord> getPrimaryKey() {
        return Keys.KEY_SURVEY_QUESTION_RESPONSE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SurveyQuestionResponseRecord>> getKeys() {
        return Arrays.<UniqueKey<SurveyQuestionResponseRecord>>asList(Keys.KEY_SURVEY_QUESTION_RESPONSE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyQuestionResponse as(String alias) {
        return new SurveyQuestionResponse(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyQuestionResponse as(Name alias) {
        return new SurveyQuestionResponse(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SurveyQuestionResponse rename(String name) {
        return new SurveyQuestionResponse(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SurveyQuestionResponse rename(Name name) {
        return new SurveyQuestionResponse(name, null);
    }
}
