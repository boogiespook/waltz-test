/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.PersonHierarchy;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonHierarchyRecord extends UpdatableRecordImpl<PersonHierarchyRecord> implements Record3<String, String, Integer> {

    private static final long serialVersionUID = 1071944771;

    /**
     * Setter for <code>person_hierarchy.manager_id</code>.
     */
    public void setManagerId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>person_hierarchy.manager_id</code>.
     */
    public String getManagerId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>person_hierarchy.employee_id</code>.
     */
    public void setEmployeeId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>person_hierarchy.employee_id</code>.
     */
    public String getEmployeeId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>person_hierarchy.level</code>.
     */
    public void setLevel(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>person_hierarchy.level</code>.
     */
    public Integer getLevel() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PersonHierarchy.PERSON_HIERARCHY.MANAGER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PersonHierarchy.PERSON_HIERARCHY.EMPLOYEE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return PersonHierarchy.PERSON_HIERARCHY.LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getManagerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getEmployeeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getManagerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEmployeeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonHierarchyRecord value1(String value) {
        setManagerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonHierarchyRecord value2(String value) {
        setEmployeeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonHierarchyRecord value3(Integer value) {
        setLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonHierarchyRecord values(String value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonHierarchyRecord
     */
    public PersonHierarchyRecord() {
        super(PersonHierarchy.PERSON_HIERARCHY);
    }

    /**
     * Create a detached, initialised PersonHierarchyRecord
     */
    public PersonHierarchyRecord(String managerId, String employeeId, Integer level) {
        super(PersonHierarchy.PERSON_HIERARCHY);

        set(0, managerId);
        set(1, employeeId);
        set(2, level);
    }
}
