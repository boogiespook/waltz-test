/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.SurveyTemplateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SurveyTemplate extends TableImpl<SurveyTemplateRecord> {

    private static final long serialVersionUID = -2087670549;

    /**
     * The reference instance of <code>survey_template</code>
     */
    public static final SurveyTemplate SURVEY_TEMPLATE = new SurveyTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SurveyTemplateRecord> getRecordType() {
        return SurveyTemplateRecord.class;
    }

    /**
     * The column <code>survey_template.id</code>.
     */
    public final TableField<SurveyTemplateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>survey_template.name</code>.
     */
    public final TableField<SurveyTemplateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>survey_template.description</code>.
     */
    public final TableField<SurveyTemplateRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>survey_template.target_entity_kind</code>.
     */
    public final TableField<SurveyTemplateRecord, String> TARGET_ENTITY_KIND = createField("target_entity_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>survey_template.owner_id</code>.
     */
    public final TableField<SurveyTemplateRecord, Long> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>survey_template.created_at</code>.
     */
    public final TableField<SurveyTemplateRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>survey_template.status</code>.
     */
    public final TableField<SurveyTemplateRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>survey_template</code> table reference
     */
    public SurveyTemplate() {
        this(DSL.name("survey_template"), null);
    }

    /**
     * Create an aliased <code>survey_template</code> table reference
     */
    public SurveyTemplate(String alias) {
        this(DSL.name(alias), SURVEY_TEMPLATE);
    }

    /**
     * Create an aliased <code>survey_template</code> table reference
     */
    public SurveyTemplate(Name alias) {
        this(alias, SURVEY_TEMPLATE);
    }

    private SurveyTemplate(Name alias, Table<SurveyTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private SurveyTemplate(Name alias, Table<SurveyTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SURVEY_TEMPLATE_PRIMARY, Indexes.SURVEY_TEMPLATE_SURVEY_TEMPLATE_UNIQUE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SurveyTemplateRecord, Long> getIdentity() {
        return Keys.IDENTITY_SURVEY_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SurveyTemplateRecord> getPrimaryKey() {
        return Keys.KEY_SURVEY_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SurveyTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<SurveyTemplateRecord>>asList(Keys.KEY_SURVEY_TEMPLATE_PRIMARY, Keys.KEY_SURVEY_TEMPLATE_SURVEY_TEMPLATE_UNIQUE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyTemplate as(String alias) {
        return new SurveyTemplate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyTemplate as(Name alias) {
        return new SurveyTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SurveyTemplate rename(String name) {
        return new SurveyTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SurveyTemplate rename(Name name) {
        return new SurveyTemplate(name, null);
    }
}
