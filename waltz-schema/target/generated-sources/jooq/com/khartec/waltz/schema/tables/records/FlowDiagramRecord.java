/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.FlowDiagram;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The flow diagram table represents the metadata and layout data associated 
 * with a flow diagram
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlowDiagramRecord extends UpdatableRecordImpl<FlowDiagramRecord> implements Record7<Long, String, String, String, Timestamp, String, Boolean> {

    private static final long serialVersionUID = -1588234302;

    /**
     * Setter for <code>flow_diagram.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>flow_diagram.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>flow_diagram.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>flow_diagram.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>flow_diagram.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>flow_diagram.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>flow_diagram.layout_data</code>.
     */
    public void setLayoutData(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>flow_diagram.layout_data</code>.
     */
    public String getLayoutData() {
        return (String) get(3);
    }

    /**
     * Setter for <code>flow_diagram.last_updated_at</code>.
     */
    public void setLastUpdatedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>flow_diagram.last_updated_at</code>.
     */
    public Timestamp getLastUpdatedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>flow_diagram.last_updated_by</code>.
     */
    public void setLastUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>flow_diagram.last_updated_by</code>.
     */
    public String getLastUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>flow_diagram.is_removed</code>.
     */
    public void setIsRemoved(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>flow_diagram.is_removed</code>.
     */
    public Boolean getIsRemoved() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, Timestamp, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, Timestamp, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return FlowDiagram.FLOW_DIAGRAM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return FlowDiagram.FLOW_DIAGRAM.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return FlowDiagram.FLOW_DIAGRAM.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FlowDiagram.FLOW_DIAGRAM.LAYOUT_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return FlowDiagram.FLOW_DIAGRAM.LAST_UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return FlowDiagram.FLOW_DIAGRAM.LAST_UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return FlowDiagram.FLOW_DIAGRAM.IS_REMOVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getLayoutData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getLastUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getLastUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getIsRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLayoutData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getLastUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getIsRemoved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value4(String value) {
        setLayoutData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value5(Timestamp value) {
        setLastUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value6(String value) {
        setLastUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord value7(Boolean value) {
        setIsRemoved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlowDiagramRecord values(Long value1, String value2, String value3, String value4, Timestamp value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlowDiagramRecord
     */
    public FlowDiagramRecord() {
        super(FlowDiagram.FLOW_DIAGRAM);
    }

    /**
     * Create a detached, initialised FlowDiagramRecord
     */
    public FlowDiagramRecord(Long id, String name, String description, String layoutData, Timestamp lastUpdatedAt, String lastUpdatedBy, Boolean isRemoved) {
        super(FlowDiagram.FLOW_DIAGRAM);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, layoutData);
        set(4, lastUpdatedAt);
        set(5, lastUpdatedBy);
        set(6, isRemoved);
    }
}
