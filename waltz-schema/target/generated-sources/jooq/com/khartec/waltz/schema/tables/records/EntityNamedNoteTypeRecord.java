/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.EntityNamedNoteType;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Named note types that can associated with entities
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityNamedNoteTypeRecord extends UpdatableRecordImpl<EntityNamedNoteTypeRecord> implements Record5<Long, String, String, String, Boolean> {

    private static final long serialVersionUID = 535086800;

    /**
     * Setter for <code>entity_named_note_type.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>entity_named_note_type.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>entity_named_note_type.applicable_entity_kinds</code>.
     */
    public void setApplicableEntityKinds(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>entity_named_note_type.applicable_entity_kinds</code>.
     */
    public String getApplicableEntityKinds() {
        return (String) get(1);
    }

    /**
     * Setter for <code>entity_named_note_type.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>entity_named_note_type.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>entity_named_note_type.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>entity_named_note_type.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>entity_named_note_type.is_readonly</code>.
     */
    public void setIsReadonly(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>entity_named_note_type.is_readonly</code>.
     */
    public Boolean getIsReadonly() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.APPLICABLE_ENTITY_KINDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE.IS_READONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getApplicableEntityKinds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getIsReadonly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getApplicableEntityKinds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getIsReadonly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityNamedNoteTypeRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityNamedNoteTypeRecord value2(String value) {
        setApplicableEntityKinds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityNamedNoteTypeRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityNamedNoteTypeRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityNamedNoteTypeRecord value5(Boolean value) {
        setIsReadonly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityNamedNoteTypeRecord values(Long value1, String value2, String value3, String value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityNamedNoteTypeRecord
     */
    public EntityNamedNoteTypeRecord() {
        super(EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE);
    }

    /**
     * Create a detached, initialised EntityNamedNoteTypeRecord
     */
    public EntityNamedNoteTypeRecord(Long id, String applicableEntityKinds, String name, String description, Boolean isReadonly) {
        super(EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE);

        set(0, id);
        set(1, applicableEntityKinds);
        set(2, name);
        set(3, description);
        set(4, isReadonly);
    }
}
