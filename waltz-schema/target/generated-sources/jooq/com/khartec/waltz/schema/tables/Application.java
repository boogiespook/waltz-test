/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.ApplicationRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Application extends TableImpl<ApplicationRecord> {

    private static final long serialVersionUID = -1133384709;

    /**
     * The reference instance of <code>application</code>
     */
    public static final Application APPLICATION = new Application();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicationRecord> getRecordType() {
        return ApplicationRecord.class;
    }

    /**
     * The column <code>application.id</code>.
     */
    public final TableField<ApplicationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>application.name</code>.
     */
    public final TableField<ApplicationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.description</code>.
     */
    public final TableField<ApplicationRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>application.asset_code</code>.
     */
    public final TableField<ApplicationRecord, String> ASSET_CODE = createField("asset_code", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.created_at</code>.
     */
    public final TableField<ApplicationRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>application.updated_at</code>.
     */
    public final TableField<ApplicationRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>application.organisational_unit_id</code>.
     */
    public final TableField<ApplicationRecord, Long> ORGANISATIONAL_UNIT_ID = createField("organisational_unit_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>application.kind</code>.
     */
    public final TableField<ApplicationRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("'IN_HOUSE'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.lifecycle_phase</code>.
     */
    public final TableField<ApplicationRecord, String> LIFECYCLE_PHASE = createField("lifecycle_phase", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("'PRODUCTION'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.parent_asset_code</code>.
     */
    public final TableField<ApplicationRecord, String> PARENT_ASSET_CODE = createField("parent_asset_code", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.overall_rating</code>.
     */
    public final TableField<ApplicationRecord, String> OVERALL_RATING = createField("overall_rating", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'Z'", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>application.provenance</code>.
     */
    public final TableField<ApplicationRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'waltz'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.business_criticality</code>.
     */
    public final TableField<ApplicationRecord, String> BUSINESS_CRITICALITY = createField("business_criticality", org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.is_removed</code>.
     */
    public final TableField<ApplicationRecord, Boolean> IS_REMOVED = createField("is_removed", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>application.entity_lifecycle_status</code>.
     */
    public final TableField<ApplicationRecord, String> ENTITY_LIFECYCLE_STATUS = createField("entity_lifecycle_status", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'ACTIVE'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application.planned_retirement_date</code>.
     */
    public final TableField<ApplicationRecord, Timestamp> PLANNED_RETIREMENT_DATE = createField("planned_retirement_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>application.actual_retirement_date</code>.
     */
    public final TableField<ApplicationRecord, Timestamp> ACTUAL_RETIREMENT_DATE = createField("actual_retirement_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>application</code> table reference
     */
    public Application() {
        this(DSL.name("application"), null);
    }

    /**
     * Create an aliased <code>application</code> table reference
     */
    public Application(String alias) {
        this(DSL.name(alias), APPLICATION);
    }

    /**
     * Create an aliased <code>application</code> table reference
     */
    public Application(Name alias) {
        this(alias, APPLICATION);
    }

    private Application(Name alias, Table<ApplicationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Application(Name alias, Table<ApplicationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.APPLICATION_APPLICATION_CONTENT_FT_IDX, Indexes.APPLICATION_IDX_ASSET_CODE, Indexes.APPLICATION_IDX_ELS_APPLICATION, Indexes.APPLICATION_IDX_ORGANISATIONAL_UNIT_ID, Indexes.APPLICATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ApplicationRecord, Long> getIdentity() {
        return Keys.IDENTITY_APPLICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApplicationRecord> getPrimaryKey() {
        return Keys.KEY_APPLICATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApplicationRecord>> getKeys() {
        return Arrays.<UniqueKey<ApplicationRecord>>asList(Keys.KEY_APPLICATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Application as(String alias) {
        return new Application(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Application as(Name alias) {
        return new Application(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Application rename(String name) {
        return new Application(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Application rename(Name name) {
        return new Application(name, null);
    }
}
