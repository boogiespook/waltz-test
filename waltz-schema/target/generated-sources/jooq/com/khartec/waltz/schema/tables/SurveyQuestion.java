/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.SurveyQuestionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SurveyQuestion extends TableImpl<SurveyQuestionRecord> {

    private static final long serialVersionUID = 180428867;

    /**
     * The reference instance of <code>survey_question</code>
     */
    public static final SurveyQuestion SURVEY_QUESTION = new SurveyQuestion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SurveyQuestionRecord> getRecordType() {
        return SurveyQuestionRecord.class;
    }

    /**
     * The column <code>survey_question.id</code>.
     */
    public final TableField<SurveyQuestionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>survey_question.survey_template_id</code>.
     */
    public final TableField<SurveyQuestionRecord, Long> SURVEY_TEMPLATE_ID = createField("survey_template_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>survey_question.question_text</code>.
     */
    public final TableField<SurveyQuestionRecord, String> QUESTION_TEXT = createField("question_text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>survey_question.field_type</code>.
     */
    public final TableField<SurveyQuestionRecord, String> FIELD_TYPE = createField("field_type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>survey_question.section_name</code>.
     */
    public final TableField<SurveyQuestionRecord, String> SECTION_NAME = createField("section_name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>survey_question.position</code>.
     */
    public final TableField<SurveyQuestionRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>survey_question.is_mandatory</code>.
     */
    public final TableField<SurveyQuestionRecord, Boolean> IS_MANDATORY = createField("is_mandatory", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>survey_question.allow_comment</code>.
     */
    public final TableField<SurveyQuestionRecord, Boolean> ALLOW_COMMENT = createField("allow_comment", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>survey_question.help_text</code>.
     */
    public final TableField<SurveyQuestionRecord, String> HELP_TEXT = createField("help_text", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>survey_question</code> table reference
     */
    public SurveyQuestion() {
        this(DSL.name("survey_question"), null);
    }

    /**
     * Create an aliased <code>survey_question</code> table reference
     */
    public SurveyQuestion(String alias) {
        this(DSL.name(alias), SURVEY_QUESTION);
    }

    /**
     * Create an aliased <code>survey_question</code> table reference
     */
    public SurveyQuestion(Name alias) {
        this(alias, SURVEY_QUESTION);
    }

    private SurveyQuestion(Name alias, Table<SurveyQuestionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SurveyQuestion(Name alias, Table<SurveyQuestionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SURVEY_QUESTION_IDX_SURVEY_QUESTION_TEMPLATE, Indexes.SURVEY_QUESTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SurveyQuestionRecord, Long> getIdentity() {
        return Keys.IDENTITY_SURVEY_QUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SurveyQuestionRecord> getPrimaryKey() {
        return Keys.KEY_SURVEY_QUESTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SurveyQuestionRecord>> getKeys() {
        return Arrays.<UniqueKey<SurveyQuestionRecord>>asList(Keys.KEY_SURVEY_QUESTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyQuestion as(String alias) {
        return new SurveyQuestion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SurveyQuestion as(Name alias) {
        return new SurveyQuestion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SurveyQuestion rename(String name) {
        return new SurveyQuestion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SurveyQuestion rename(Name name) {
        return new SurveyQuestion(name, null);
    }
}
