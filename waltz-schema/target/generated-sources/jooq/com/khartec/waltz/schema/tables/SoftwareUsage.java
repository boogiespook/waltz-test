/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.tables.records.SoftwareUsageRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SoftwareUsage extends TableImpl<SoftwareUsageRecord> {

    private static final long serialVersionUID = -147552666;

    /**
     * The reference instance of <code>software_usage</code>
     */
    public static final SoftwareUsage SOFTWARE_USAGE = new SoftwareUsage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SoftwareUsageRecord> getRecordType() {
        return SoftwareUsageRecord.class;
    }

    /**
     * The column <code>software_usage.application_id</code>.
     */
    public final TableField<SoftwareUsageRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>software_usage.software_package_id</code>.
     */
    public final TableField<SoftwareUsageRecord, Long> SOFTWARE_PACKAGE_ID = createField("software_package_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>software_usage.provenance</code>.
     */
    public final TableField<SoftwareUsageRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'waltz'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>software_usage</code> table reference
     */
    public SoftwareUsage() {
        this(DSL.name("software_usage"), null);
    }

    /**
     * Create an aliased <code>software_usage</code> table reference
     */
    public SoftwareUsage(String alias) {
        this(DSL.name(alias), SOFTWARE_USAGE);
    }

    /**
     * Create an aliased <code>software_usage</code> table reference
     */
    public SoftwareUsage(Name alias) {
        this(alias, SOFTWARE_USAGE);
    }

    private SoftwareUsage(Name alias, Table<SoftwareUsageRecord> aliased) {
        this(alias, aliased, null);
    }

    private SoftwareUsage(Name alias, Table<SoftwareUsageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SoftwareUsage as(String alias) {
        return new SoftwareUsage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SoftwareUsage as(Name alias) {
        return new SoftwareUsage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SoftwareUsage rename(String name) {
        return new SoftwareUsage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SoftwareUsage rename(Name name) {
        return new SoftwareUsage(name, null);
    }
}
