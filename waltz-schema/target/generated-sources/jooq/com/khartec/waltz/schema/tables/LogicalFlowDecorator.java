/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.LogicalFlowDecoratorRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogicalFlowDecorator extends TableImpl<LogicalFlowDecoratorRecord> {

    private static final long serialVersionUID = 1160642145;

    /**
     * The reference instance of <code>logical_flow_decorator</code>
     */
    public static final LogicalFlowDecorator LOGICAL_FLOW_DECORATOR = new LogicalFlowDecorator();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogicalFlowDecoratorRecord> getRecordType() {
        return LogicalFlowDecoratorRecord.class;
    }

    /**
     * The column <code>logical_flow_decorator.logical_flow_id</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, Long> LOGICAL_FLOW_ID = createField("logical_flow_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>logical_flow_decorator.decorator_entity_kind</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, String> DECORATOR_ENTITY_KIND = createField("decorator_entity_kind", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>logical_flow_decorator.decorator_entity_id</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, Long> DECORATOR_ENTITY_ID = createField("decorator_entity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>logical_flow_decorator.rating</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, String> RATING = createField("rating", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.field("'NO_OPINION'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>logical_flow_decorator.provenance</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'waltz'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>logical_flow_decorator.last_updated_at</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, Timestamp> LAST_UPDATED_AT = createField("last_updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>logical_flow_decorator.last_updated_by</code>.
     */
    public final TableField<LogicalFlowDecoratorRecord, String> LAST_UPDATED_BY = createField("last_updated_by", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>logical_flow_decorator</code> table reference
     */
    public LogicalFlowDecorator() {
        this(DSL.name("logical_flow_decorator"), null);
    }

    /**
     * Create an aliased <code>logical_flow_decorator</code> table reference
     */
    public LogicalFlowDecorator(String alias) {
        this(DSL.name(alias), LOGICAL_FLOW_DECORATOR);
    }

    /**
     * Create an aliased <code>logical_flow_decorator</code> table reference
     */
    public LogicalFlowDecorator(Name alias) {
        this(alias, LOGICAL_FLOW_DECORATOR);
    }

    private LogicalFlowDecorator(Name alias, Table<LogicalFlowDecoratorRecord> aliased) {
        this(alias, aliased, null);
    }

    private LogicalFlowDecorator(Name alias, Table<LogicalFlowDecoratorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOGICAL_FLOW_DECORATOR_IDX_LFD_LFID_DECKIND, Indexes.LOGICAL_FLOW_DECORATOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogicalFlowDecoratorRecord> getPrimaryKey() {
        return Keys.KEY_LOGICAL_FLOW_DECORATOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogicalFlowDecoratorRecord>> getKeys() {
        return Arrays.<UniqueKey<LogicalFlowDecoratorRecord>>asList(Keys.KEY_LOGICAL_FLOW_DECORATOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogicalFlowDecorator as(String alias) {
        return new LogicalFlowDecorator(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogicalFlowDecorator as(Name alias) {
        return new LogicalFlowDecorator(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LogicalFlowDecorator rename(String name) {
        return new LogicalFlowDecorator(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LogicalFlowDecorator rename(Name name) {
        return new LogicalFlowDecorator(name, null);
    }
}
