/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.InvolvementKindRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvolvementKind extends TableImpl<InvolvementKindRecord> {

    private static final long serialVersionUID = -1197123014;

    /**
     * The reference instance of <code>involvement_kind</code>
     */
    public static final InvolvementKind INVOLVEMENT_KIND = new InvolvementKind();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvolvementKindRecord> getRecordType() {
        return InvolvementKindRecord.class;
    }

    /**
     * The column <code>involvement_kind.id</code>.
     */
    public final TableField<InvolvementKindRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>involvement_kind.name</code>.
     */
    public final TableField<InvolvementKindRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>involvement_kind.description</code>.
     */
    public final TableField<InvolvementKindRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>involvement_kind.last_updated_at</code>.
     */
    public final TableField<InvolvementKindRecord, Timestamp> LAST_UPDATED_AT = createField("last_updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>involvement_kind.last_updated_by</code>.
     */
    public final TableField<InvolvementKindRecord, String> LAST_UPDATED_BY = createField("last_updated_by", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>involvement_kind</code> table reference
     */
    public InvolvementKind() {
        this(DSL.name("involvement_kind"), null);
    }

    /**
     * Create an aliased <code>involvement_kind</code> table reference
     */
    public InvolvementKind(String alias) {
        this(DSL.name(alias), INVOLVEMENT_KIND);
    }

    /**
     * Create an aliased <code>involvement_kind</code> table reference
     */
    public InvolvementKind(Name alias) {
        this(alias, INVOLVEMENT_KIND);
    }

    private InvolvementKind(Name alias, Table<InvolvementKindRecord> aliased) {
        this(alias, aliased, null);
    }

    private InvolvementKind(Name alias, Table<InvolvementKindRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INVOLVEMENT_KIND_NAME, Indexes.INVOLVEMENT_KIND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InvolvementKindRecord, Long> getIdentity() {
        return Keys.IDENTITY_INVOLVEMENT_KIND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvolvementKindRecord> getPrimaryKey() {
        return Keys.KEY_INVOLVEMENT_KIND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvolvementKindRecord>> getKeys() {
        return Arrays.<UniqueKey<InvolvementKindRecord>>asList(Keys.KEY_INVOLVEMENT_KIND_PRIMARY, Keys.KEY_INVOLVEMENT_KIND_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvolvementKind as(String alias) {
        return new InvolvementKind(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvolvementKind as(Name alias) {
        return new InvolvementKind(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InvolvementKind rename(String name) {
        return new InvolvementKind(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InvolvementKind rename(Name name) {
        return new InvolvementKind(name, null);
    }
}
