/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.ScenarioAxisItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScenarioAxisItem extends TableImpl<ScenarioAxisItemRecord> {

    private static final long serialVersionUID = -1389254649;

    /**
     * The reference instance of <code>scenario_axis_item</code>
     */
    public static final ScenarioAxisItem SCENARIO_AXIS_ITEM = new ScenarioAxisItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScenarioAxisItemRecord> getRecordType() {
        return ScenarioAxisItemRecord.class;
    }

    /**
     * The column <code>scenario_axis_item.id</code>.
     */
    public final TableField<ScenarioAxisItemRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>scenario_axis_item.orientation</code>.
     */
    public final TableField<ScenarioAxisItemRecord, String> ORIENTATION = createField("orientation", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>scenario_axis_item.scenario_id</code>.
     */
    public final TableField<ScenarioAxisItemRecord, Long> SCENARIO_ID = createField("scenario_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>scenario_axis_item.position</code>.
     */
    public final TableField<ScenarioAxisItemRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>scenario_axis_item.domain_item_kind</code>.
     */
    public final TableField<ScenarioAxisItemRecord, String> DOMAIN_ITEM_KIND = createField("domain_item_kind", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>scenario_axis_item.domain_item_id</code>.
     */
    public final TableField<ScenarioAxisItemRecord, Long> DOMAIN_ITEM_ID = createField("domain_item_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>scenario_axis_item</code> table reference
     */
    public ScenarioAxisItem() {
        this(DSL.name("scenario_axis_item"), null);
    }

    /**
     * Create an aliased <code>scenario_axis_item</code> table reference
     */
    public ScenarioAxisItem(String alias) {
        this(DSL.name(alias), SCENARIO_AXIS_ITEM);
    }

    /**
     * Create an aliased <code>scenario_axis_item</code> table reference
     */
    public ScenarioAxisItem(Name alias) {
        this(alias, SCENARIO_AXIS_ITEM);
    }

    private ScenarioAxisItem(Name alias, Table<ScenarioAxisItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScenarioAxisItem(Name alias, Table<ScenarioAxisItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCENARIO_AXIS_ITEM_IDX_SCENARIO_AXIS_SCENARIO_ID, Indexes.SCENARIO_AXIS_ITEM_IDX_SCENARIO_AXIS_UNIQ, Indexes.SCENARIO_AXIS_ITEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ScenarioAxisItemRecord, Long> getIdentity() {
        return Keys.IDENTITY_SCENARIO_AXIS_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScenarioAxisItemRecord> getPrimaryKey() {
        return Keys.KEY_SCENARIO_AXIS_ITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScenarioAxisItemRecord>> getKeys() {
        return Arrays.<UniqueKey<ScenarioAxisItemRecord>>asList(Keys.KEY_SCENARIO_AXIS_ITEM_PRIMARY, Keys.KEY_SCENARIO_AXIS_ITEM_IDX_SCENARIO_AXIS_UNIQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScenarioAxisItem as(String alias) {
        return new ScenarioAxisItem(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScenarioAxisItem as(Name alias) {
        return new ScenarioAxisItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScenarioAxisItem rename(String name) {
        return new ScenarioAxisItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScenarioAxisItem rename(Name name) {
        return new ScenarioAxisItem(name, null);
    }
}
