/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables.records;


import com.khartec.waltz.schema.tables.MeasurableCategory;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeasurableCategoryRecord extends UpdatableRecordImpl<MeasurableCategoryRecord> implements Record8<Long, String, String, String, Timestamp, String, Long, Boolean> {

    private static final long serialVersionUID = -1761707843;

    /**
     * Setter for <code>measurable_category.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>measurable_category.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>measurable_category.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>measurable_category.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>measurable_category.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>measurable_category.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>measurable_category.external_id</code>.
     */
    public void setExternalId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>measurable_category.external_id</code>.
     */
    public String getExternalId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>measurable_category.last_updated_at</code>.
     */
    public void setLastUpdatedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>measurable_category.last_updated_at</code>.
     */
    public Timestamp getLastUpdatedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>measurable_category.last_updated_by</code>.
     */
    public void setLastUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>measurable_category.last_updated_by</code>.
     */
    public String getLastUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>measurable_category.rating_scheme_id</code>.
     */
    public void setRatingSchemeId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>measurable_category.rating_scheme_id</code>.
     */
    public Long getRatingSchemeId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>measurable_category.editable</code>.
     */
    public void setEditable(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>measurable_category.editable</code>.
     */
    public Boolean getEditable() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, String, String, Timestamp, String, Long, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, String, String, Timestamp, String, Long, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MeasurableCategory.MEASURABLE_CATEGORY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return MeasurableCategory.MEASURABLE_CATEGORY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MeasurableCategory.MEASURABLE_CATEGORY.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return MeasurableCategory.MEASURABLE_CATEGORY.EXTERNAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return MeasurableCategory.MEASURABLE_CATEGORY.LAST_UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return MeasurableCategory.MEASURABLE_CATEGORY.LAST_UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return MeasurableCategory.MEASURABLE_CATEGORY.RATING_SCHEME_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return MeasurableCategory.MEASURABLE_CATEGORY.EDITABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getExternalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getLastUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getLastUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getRatingSchemeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getEditable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getExternalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getLastUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getRatingSchemeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getEditable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value4(String value) {
        setExternalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value5(Timestamp value) {
        setLastUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value6(String value) {
        setLastUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value7(Long value) {
        setRatingSchemeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord value8(Boolean value) {
        setEditable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurableCategoryRecord values(Long value1, String value2, String value3, String value4, Timestamp value5, String value6, Long value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeasurableCategoryRecord
     */
    public MeasurableCategoryRecord() {
        super(MeasurableCategory.MEASURABLE_CATEGORY);
    }

    /**
     * Create a detached, initialised MeasurableCategoryRecord
     */
    public MeasurableCategoryRecord(Long id, String name, String description, String externalId, Timestamp lastUpdatedAt, String lastUpdatedBy, Long ratingSchemeId, Boolean editable) {
        super(MeasurableCategory.MEASURABLE_CATEGORY);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, externalId);
        set(4, lastUpdatedAt);
        set(5, lastUpdatedBy);
        set(6, ratingSchemeId);
        set(7, editable);
    }
}
