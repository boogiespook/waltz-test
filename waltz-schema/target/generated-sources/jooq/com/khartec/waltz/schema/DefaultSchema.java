/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema;


import com.khartec.waltz.schema.tables.AccessLog;
import com.khartec.waltz.schema.tables.Actor;
import com.khartec.waltz.schema.tables.Application;
import com.khartec.waltz.schema.tables.ApplicationGroup;
import com.khartec.waltz.schema.tables.ApplicationGroupEntry;
import com.khartec.waltz.schema.tables.ApplicationGroupMember;
import com.khartec.waltz.schema.tables.AssessmentDefinition;
import com.khartec.waltz.schema.tables.AssessmentRating;
import com.khartec.waltz.schema.tables.AssetCost;
import com.khartec.waltz.schema.tables.AttestationInstance;
import com.khartec.waltz.schema.tables.AttestationInstanceRecipient;
import com.khartec.waltz.schema.tables.AttestationRun;
import com.khartec.waltz.schema.tables.Attestation_1_11;
import com.khartec.waltz.schema.tables.AuthoritativeSource;
import com.khartec.waltz.schema.tables.Bookmark;
import com.khartec.waltz.schema.tables.ChangeInitiative;
import com.khartec.waltz.schema.tables.ChangeLog;
import com.khartec.waltz.schema.tables.ComplexityScore;
import com.khartec.waltz.schema.tables.DataType;
import com.khartec.waltz.schema.tables.DataTypeUsage;
import com.khartec.waltz.schema.tables.DatabaseInformation;
import com.khartec.waltz.schema.tables.Databasechangelog;
import com.khartec.waltz.schema.tables.Databasechangeloglock;
import com.khartec.waltz.schema.tables.DrillGridDefinition;
import com.khartec.waltz.schema.tables.EndUserApplication;
import com.khartec.waltz.schema.tables.EntityAlias;
import com.khartec.waltz.schema.tables.EntityEnumDefinition;
import com.khartec.waltz.schema.tables.EntityEnumValue;
import com.khartec.waltz.schema.tables.EntityHierarchy;
import com.khartec.waltz.schema.tables.EntityNamedNote;
import com.khartec.waltz.schema.tables.EntityNamedNoteType;
import com.khartec.waltz.schema.tables.EntityRelationship;
import com.khartec.waltz.schema.tables.EntityStatisticDefinition;
import com.khartec.waltz.schema.tables.EntityStatisticValue;
import com.khartec.waltz.schema.tables.EntitySvgDiagram;
import com.khartec.waltz.schema.tables.EntityTag;
import com.khartec.waltz.schema.tables.EntityWorkflowDefinition;
import com.khartec.waltz.schema.tables.EntityWorkflowState;
import com.khartec.waltz.schema.tables.EntityWorkflowTransition;
import com.khartec.waltz.schema.tables.EnumValue;
import com.khartec.waltz.schema.tables.FlowDiagram;
import com.khartec.waltz.schema.tables.FlowDiagramAnnotation;
import com.khartec.waltz.schema.tables.FlowDiagramEntity;
import com.khartec.waltz.schema.tables.Involvement;
import com.khartec.waltz.schema.tables.InvolvementKind;
import com.khartec.waltz.schema.tables.LogicalDataElement;
import com.khartec.waltz.schema.tables.LogicalFlow;
import com.khartec.waltz.schema.tables.LogicalFlowDecorator;
import com.khartec.waltz.schema.tables.Measurable;
import com.khartec.waltz.schema.tables.MeasurableCategory;
import com.khartec.waltz.schema.tables.MeasurableRating;
import com.khartec.waltz.schema.tables.OrganisationalUnit;
import com.khartec.waltz.schema.tables.Person;
import com.khartec.waltz.schema.tables.PersonHierarchy;
import com.khartec.waltz.schema.tables.PerspectiveDefinition;
import com.khartec.waltz.schema.tables.PerspectiveRating;
import com.khartec.waltz.schema.tables.PhysicalFlow;
import com.khartec.waltz.schema.tables.PhysicalSpecDataType;
import com.khartec.waltz.schema.tables.PhysicalSpecDefn;
import com.khartec.waltz.schema.tables.PhysicalSpecDefnField;
import com.khartec.waltz.schema.tables.PhysicalSpecDefnSampleFile;
import com.khartec.waltz.schema.tables.PhysicalSpecification;
import com.khartec.waltz.schema.tables.Process;
import com.khartec.waltz.schema.tables.RatingScheme;
import com.khartec.waltz.schema.tables.RatingSchemeItem;
import com.khartec.waltz.schema.tables.Roadmap;
import com.khartec.waltz.schema.tables.Scenario;
import com.khartec.waltz.schema.tables.ScenarioAxisItem;
import com.khartec.waltz.schema.tables.ScenarioRatingItem;
import com.khartec.waltz.schema.tables.ServerInformation;
import com.khartec.waltz.schema.tables.Settings;
import com.khartec.waltz.schema.tables.SharedPreference;
import com.khartec.waltz.schema.tables.SoftwarePackage;
import com.khartec.waltz.schema.tables.SoftwareUsage;
import com.khartec.waltz.schema.tables.SourceDataRating;
import com.khartec.waltz.schema.tables.StaticPanel;
import com.khartec.waltz.schema.tables.SurveyInstance;
import com.khartec.waltz.schema.tables.SurveyInstanceRecipient;
import com.khartec.waltz.schema.tables.SurveyQuestion;
import com.khartec.waltz.schema.tables.SurveyQuestionDropdownEntry;
import com.khartec.waltz.schema.tables.SurveyQuestionResponse;
import com.khartec.waltz.schema.tables.SurveyRun;
import com.khartec.waltz.schema.tables.SurveyTemplate;
import com.khartec.waltz.schema.tables.SvgDiagram;
import com.khartec.waltz.schema.tables.SystemJobLog;
import com.khartec.waltz.schema.tables.Tour;
import com.khartec.waltz.schema.tables.User;
import com.khartec.waltz.schema.tables.UserAgentInfo;
import com.khartec.waltz.schema.tables.UserPreference;
import com.khartec.waltz.schema.tables.UserRole;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = -900221626;

    /**
     * The reference instance of <code></code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>access_log</code>.
     */
    public final AccessLog ACCESS_LOG = com.khartec.waltz.schema.tables.AccessLog.ACCESS_LOG;

    /**
     * The table <code>actor</code>.
     */
    public final Actor ACTOR = com.khartec.waltz.schema.tables.Actor.ACTOR;

    /**
     * The table <code>application</code>.
     */
    public final Application APPLICATION = com.khartec.waltz.schema.tables.Application.APPLICATION;

    /**
     * The table <code>application_group</code>.
     */
    public final ApplicationGroup APPLICATION_GROUP = com.khartec.waltz.schema.tables.ApplicationGroup.APPLICATION_GROUP;

    /**
     * The table <code>application_group_entry</code>.
     */
    public final ApplicationGroupEntry APPLICATION_GROUP_ENTRY = com.khartec.waltz.schema.tables.ApplicationGroupEntry.APPLICATION_GROUP_ENTRY;

    /**
     * The table <code>application_group_member</code>.
     */
    public final ApplicationGroupMember APPLICATION_GROUP_MEMBER = com.khartec.waltz.schema.tables.ApplicationGroupMember.APPLICATION_GROUP_MEMBER;

    /**
     * Add assessment definition table
     */
    public final AssessmentDefinition ASSESSMENT_DEFINITION = com.khartec.waltz.schema.tables.AssessmentDefinition.ASSESSMENT_DEFINITION;

    /**
     * Add assessment rating table
     */
    public final AssessmentRating ASSESSMENT_RATING = com.khartec.waltz.schema.tables.AssessmentRating.ASSESSMENT_RATING;

    /**
     * The table <code>asset_cost</code>.
     */
    public final AssetCost ASSET_COST = com.khartec.waltz.schema.tables.AssetCost.ASSET_COST;

    /**
     * Store attestation records
     */
    public final Attestation_1_11 ATTESTATION_1_11 = com.khartec.waltz.schema.tables.Attestation_1_11.ATTESTATION_1_11;

    /**
     * Store attestation instance records
     */
    public final AttestationInstance ATTESTATION_INSTANCE = com.khartec.waltz.schema.tables.AttestationInstance.ATTESTATION_INSTANCE;

    /**
     * Store attestation instance recipient records
     */
    public final AttestationInstanceRecipient ATTESTATION_INSTANCE_RECIPIENT = com.khartec.waltz.schema.tables.AttestationInstanceRecipient.ATTESTATION_INSTANCE_RECIPIENT;

    /**
     * Store attestation run records
     */
    public final AttestationRun ATTESTATION_RUN = com.khartec.waltz.schema.tables.AttestationRun.ATTESTATION_RUN;

    /**
     * The table <code>authoritative_source</code>.
     */
    public final AuthoritativeSource AUTHORITATIVE_SOURCE = com.khartec.waltz.schema.tables.AuthoritativeSource.AUTHORITATIVE_SOURCE;

    /**
     * The table <code>bookmark</code>.
     */
    public final Bookmark BOOKMARK = com.khartec.waltz.schema.tables.Bookmark.BOOKMARK;

    /**
     * The table <code>change_initiative</code>.
     */
    public final ChangeInitiative CHANGE_INITIATIVE = com.khartec.waltz.schema.tables.ChangeInitiative.CHANGE_INITIATIVE;

    /**
     * The table <code>change_log</code>.
     */
    public final ChangeLog CHANGE_LOG = com.khartec.waltz.schema.tables.ChangeLog.CHANGE_LOG;

    /**
     * The table <code>complexity_score</code>.
     */
    public final ComplexityScore COMPLEXITY_SCORE = com.khartec.waltz.schema.tables.ComplexityScore.COMPLEXITY_SCORE;

    /**
     * The table <code>DATABASECHANGELOG</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = com.khartec.waltz.schema.tables.Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>DATABASECHANGELOGLOCK</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = com.khartec.waltz.schema.tables.Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>database_information</code>.
     */
    public final DatabaseInformation DATABASE_INFORMATION = com.khartec.waltz.schema.tables.DatabaseInformation.DATABASE_INFORMATION;

    /**
     * The table <code>data_type</code>.
     */
    public final DataType DATA_TYPE = com.khartec.waltz.schema.tables.DataType.DATA_TYPE;

    /**
     * The table <code>data_type_usage</code>.
     */
    public final DataTypeUsage DATA_TYPE_USAGE = com.khartec.waltz.schema.tables.DataTypeUsage.DATA_TYPE_USAGE;

    /**
     * Settings for drill grids, kind may be either measurable category or data type
     */
    public final DrillGridDefinition DRILL_GRID_DEFINITION = com.khartec.waltz.schema.tables.DrillGridDefinition.DRILL_GRID_DEFINITION;

    /**
     * The table <code>end_user_application</code>.
     */
    public final EndUserApplication END_USER_APPLICATION = com.khartec.waltz.schema.tables.EndUserApplication.END_USER_APPLICATION;

    /**
     * The table <code>entity_alias</code>.
     */
    public final EntityAlias ENTITY_ALIAS = com.khartec.waltz.schema.tables.EntityAlias.ENTITY_ALIAS;

    /**
     * Store entity enum definitions
     */
    public final EntityEnumDefinition ENTITY_ENUM_DEFINITION = com.khartec.waltz.schema.tables.EntityEnumDefinition.ENTITY_ENUM_DEFINITION;

    /**
     * Store entity enum values
     */
    public final EntityEnumValue ENTITY_ENUM_VALUE = com.khartec.waltz.schema.tables.EntityEnumValue.ENTITY_ENUM_VALUE;

    /**
     * Generic Hierarchy table
     */
    public final EntityHierarchy ENTITY_HIERARCHY = com.khartec.waltz.schema.tables.EntityHierarchy.ENTITY_HIERARCHY;

    /**
     * Named notes associated with entities
     */
    public final EntityNamedNote ENTITY_NAMED_NOTE = com.khartec.waltz.schema.tables.EntityNamedNote.ENTITY_NAMED_NOTE;

    /**
     * Named note types that can associated with entities
     */
    public final EntityNamedNoteType ENTITY_NAMED_NOTE_TYPE = com.khartec.waltz.schema.tables.EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE;

    /**
     * The table <code>entity_relationship</code>.
     */
    public final EntityRelationship ENTITY_RELATIONSHIP = com.khartec.waltz.schema.tables.EntityRelationship.ENTITY_RELATIONSHIP;

    /**
     * The table <code>entity_statistic_definition</code>.
     */
    public final EntityStatisticDefinition ENTITY_STATISTIC_DEFINITION = com.khartec.waltz.schema.tables.EntityStatisticDefinition.ENTITY_STATISTIC_DEFINITION;

    /**
     * The table <code>entity_statistic_value</code>.
     */
    public final EntityStatisticValue ENTITY_STATISTIC_VALUE = com.khartec.waltz.schema.tables.EntityStatisticValue.ENTITY_STATISTIC_VALUE;

    /**
     * SVG diagrams associated to a specific entity
     */
    public final EntitySvgDiagram ENTITY_SVG_DIAGRAM = com.khartec.waltz.schema.tables.EntitySvgDiagram.ENTITY_SVG_DIAGRAM;

    /**
     * Allows for association of zero or more tags with entities
     */
    public final EntityTag ENTITY_TAG = com.khartec.waltz.schema.tables.EntityTag.ENTITY_TAG;

    /**
     * Store entity workflow definitions
     */
    public final EntityWorkflowDefinition ENTITY_WORKFLOW_DEFINITION = com.khartec.waltz.schema.tables.EntityWorkflowDefinition.ENTITY_WORKFLOW_DEFINITION;

    /**
     * Store entity workflow states
     */
    public final EntityWorkflowState ENTITY_WORKFLOW_STATE = com.khartec.waltz.schema.tables.EntityWorkflowState.ENTITY_WORKFLOW_STATE;

    /**
     * Store entity workflow transitions
     */
    public final EntityWorkflowTransition ENTITY_WORKFLOW_TRANSITION = com.khartec.waltz.schema.tables.EntityWorkflowTransition.ENTITY_WORKFLOW_TRANSITION;

    /**
     * Store enum values - display names, descriptions and icon names
     */
    public final EnumValue ENUM_VALUE = com.khartec.waltz.schema.tables.EnumValue.ENUM_VALUE;

    /**
     * The flow diagram table represents the metadata and layout data associated with a flow diagram
     */
    public final FlowDiagram FLOW_DIAGRAM = com.khartec.waltz.schema.tables.FlowDiagram.FLOW_DIAGRAM;

    /**
     * Annotations associated with a specific flow diagram
     */
    public final FlowDiagramAnnotation FLOW_DIAGRAM_ANNOTATION = com.khartec.waltz.schema.tables.FlowDiagramAnnotation.FLOW_DIAGRAM_ANNOTATION;

    /**
     * A Bill of Materials (BoM) for a flow diagram
     */
    public final FlowDiagramEntity FLOW_DIAGRAM_ENTITY = com.khartec.waltz.schema.tables.FlowDiagramEntity.FLOW_DIAGRAM_ENTITY;

    /**
     * The table <code>involvement</code>.
     */
    public final Involvement INVOLVEMENT = com.khartec.waltz.schema.tables.Involvement.INVOLVEMENT;

    /**
     * The table <code>involvement_kind</code>.
     */
    public final InvolvementKind INVOLVEMENT_KIND = com.khartec.waltz.schema.tables.InvolvementKind.INVOLVEMENT_KIND;

    /**
     * The table <code>logical_data_element</code>.
     */
    public final LogicalDataElement LOGICAL_DATA_ELEMENT = com.khartec.waltz.schema.tables.LogicalDataElement.LOGICAL_DATA_ELEMENT;

    /**
     * The table <code>logical_flow</code>.
     */
    public final LogicalFlow LOGICAL_FLOW = com.khartec.waltz.schema.tables.LogicalFlow.LOGICAL_FLOW;

    /**
     * The table <code>logical_flow_decorator</code>.
     */
    public final LogicalFlowDecorator LOGICAL_FLOW_DECORATOR = com.khartec.waltz.schema.tables.LogicalFlowDecorator.LOGICAL_FLOW_DECORATOR;

    /**
     * The table <code>measurable</code>.
     */
    public final Measurable MEASURABLE = com.khartec.waltz.schema.tables.Measurable.MEASURABLE;

    /**
     * The table <code>measurable_category</code>.
     */
    public final MeasurableCategory MEASURABLE_CATEGORY = com.khartec.waltz.schema.tables.MeasurableCategory.MEASURABLE_CATEGORY;

    /**
     * The table <code>measurable_rating</code>.
     */
    public final MeasurableRating MEASURABLE_RATING = com.khartec.waltz.schema.tables.MeasurableRating.MEASURABLE_RATING;

    /**
     * The table <code>organisational_unit</code>.
     */
    public final OrganisationalUnit ORGANISATIONAL_UNIT = com.khartec.waltz.schema.tables.OrganisationalUnit.ORGANISATIONAL_UNIT;

    /**
     * The table <code>person</code>.
     */
    public final Person PERSON = com.khartec.waltz.schema.tables.Person.PERSON;

    /**
     * The table <code>person_hierarchy</code>.
     */
    public final PersonHierarchy PERSON_HIERARCHY = com.khartec.waltz.schema.tables.PersonHierarchy.PERSON_HIERARCHY;

    /**
     * The table <code>perspective_definition</code>.
     */
    public final PerspectiveDefinition PERSPECTIVE_DEFINITION = com.khartec.waltz.schema.tables.PerspectiveDefinition.PERSPECTIVE_DEFINITION;

    /**
     * The table <code>perspective_rating</code>.
     */
    public final PerspectiveRating PERSPECTIVE_RATING = com.khartec.waltz.schema.tables.PerspectiveRating.PERSPECTIVE_RATING;

    /**
     * The table <code>physical_flow</code>.
     */
    public final PhysicalFlow PHYSICAL_FLOW = com.khartec.waltz.schema.tables.PhysicalFlow.PHYSICAL_FLOW;

    /**
     * The table <code>physical_specification</code>.
     */
    public final PhysicalSpecification PHYSICAL_SPECIFICATION = com.khartec.waltz.schema.tables.PhysicalSpecification.PHYSICAL_SPECIFICATION;

    /**
     * Decorates physical specs with data types
     */
    public final PhysicalSpecDataType PHYSICAL_SPEC_DATA_TYPE = com.khartec.waltz.schema.tables.PhysicalSpecDataType.PHYSICAL_SPEC_DATA_TYPE;

    /**
     * Stores physical spec definition records
     */
    public final PhysicalSpecDefn PHYSICAL_SPEC_DEFN = com.khartec.waltz.schema.tables.PhysicalSpecDefn.PHYSICAL_SPEC_DEFN;

    /**
     * Stores physical spec definition fields
     */
    public final PhysicalSpecDefnField PHYSICAL_SPEC_DEFN_FIELD = com.khartec.waltz.schema.tables.PhysicalSpecDefnField.PHYSICAL_SPEC_DEFN_FIELD;

    /**
     * Stores physical spec definition sample file data
     */
    public final PhysicalSpecDefnSampleFile PHYSICAL_SPEC_DEFN_SAMPLE_FILE = com.khartec.waltz.schema.tables.PhysicalSpecDefnSampleFile.PHYSICAL_SPEC_DEFN_SAMPLE_FILE;

    /**
     * The table <code>process</code>.
     */
    public final Process PROCESS = com.khartec.waltz.schema.tables.Process.PROCESS;

    /**
     * The table <code>rating_scheme</code>.
     */
    public final RatingScheme RATING_SCHEME = com.khartec.waltz.schema.tables.RatingScheme.RATING_SCHEME;

    /**
     * The table <code>rating_scheme_item</code>.
     */
    public final RatingSchemeItem RATING_SCHEME_ITEM = com.khartec.waltz.schema.tables.RatingSchemeItem.RATING_SCHEME_ITEM;

    /**
     * The table <code>roadmap</code>.
     */
    public final Roadmap ROADMAP = com.khartec.waltz.schema.tables.Roadmap.ROADMAP;

    /**
     * The table <code>scenario</code>.
     */
    public final Scenario SCENARIO = com.khartec.waltz.schema.tables.Scenario.SCENARIO;

    /**
     * The table <code>scenario_axis_item</code>.
     */
    public final ScenarioAxisItem SCENARIO_AXIS_ITEM = com.khartec.waltz.schema.tables.ScenarioAxisItem.SCENARIO_AXIS_ITEM;

    /**
     * The table <code>scenario_rating_item</code>.
     */
    public final ScenarioRatingItem SCENARIO_RATING_ITEM = com.khartec.waltz.schema.tables.ScenarioRatingItem.SCENARIO_RATING_ITEM;

    /**
     * The table <code>server_information</code>.
     */
    public final ServerInformation SERVER_INFORMATION = com.khartec.waltz.schema.tables.ServerInformation.SERVER_INFORMATION;

    /**
     * The table <code>settings</code>.
     */
    public final Settings SETTINGS = com.khartec.waltz.schema.tables.Settings.SETTINGS;

    /**
     * Store shared preference values
     */
    public final SharedPreference SHARED_PREFERENCE = com.khartec.waltz.schema.tables.SharedPreference.SHARED_PREFERENCE;

    /**
     * The table <code>software_package</code>.
     */
    public final SoftwarePackage SOFTWARE_PACKAGE = com.khartec.waltz.schema.tables.SoftwarePackage.SOFTWARE_PACKAGE;

    /**
     * The table <code>software_usage</code>.
     */
    public final SoftwareUsage SOFTWARE_USAGE = com.khartec.waltz.schema.tables.SoftwareUsage.SOFTWARE_USAGE;

    /**
     * The table <code>source_data_rating</code>.
     */
    public final SourceDataRating SOURCE_DATA_RATING = com.khartec.waltz.schema.tables.SourceDataRating.SOURCE_DATA_RATING;

    /**
     * The table <code>static_panel</code>.
     */
    public final StaticPanel STATIC_PANEL = com.khartec.waltz.schema.tables.StaticPanel.STATIC_PANEL;

    /**
     * The table <code>survey_instance</code>.
     */
    public final SurveyInstance SURVEY_INSTANCE = com.khartec.waltz.schema.tables.SurveyInstance.SURVEY_INSTANCE;

    /**
     * The table <code>survey_instance_recipient</code>.
     */
    public final SurveyInstanceRecipient SURVEY_INSTANCE_RECIPIENT = com.khartec.waltz.schema.tables.SurveyInstanceRecipient.SURVEY_INSTANCE_RECIPIENT;

    /**
     * The table <code>survey_question</code>.
     */
    public final SurveyQuestion SURVEY_QUESTION = com.khartec.waltz.schema.tables.SurveyQuestion.SURVEY_QUESTION;

    /**
     * Stores allowed dropdown values for a survey question
     */
    public final SurveyQuestionDropdownEntry SURVEY_QUESTION_DROPDOWN_ENTRY = com.khartec.waltz.schema.tables.SurveyQuestionDropdownEntry.SURVEY_QUESTION_DROPDOWN_ENTRY;

    /**
     * The table <code>survey_question_response</code>.
     */
    public final SurveyQuestionResponse SURVEY_QUESTION_RESPONSE = com.khartec.waltz.schema.tables.SurveyQuestionResponse.SURVEY_QUESTION_RESPONSE;

    /**
     * The table <code>survey_run</code>.
     */
    public final SurveyRun SURVEY_RUN = com.khartec.waltz.schema.tables.SurveyRun.SURVEY_RUN;

    /**
     * The table <code>survey_template</code>.
     */
    public final SurveyTemplate SURVEY_TEMPLATE = com.khartec.waltz.schema.tables.SurveyTemplate.SURVEY_TEMPLATE;

    /**
     * The table <code>svg_diagram</code>.
     */
    public final SvgDiagram SVG_DIAGRAM = com.khartec.waltz.schema.tables.SvgDiagram.SVG_DIAGRAM;

    /**
     * The table <code>system_job_log</code>.
     */
    public final SystemJobLog SYSTEM_JOB_LOG = com.khartec.waltz.schema.tables.SystemJobLog.SYSTEM_JOB_LOG;

    /**
     * The table <code>tour</code>.
     */
    public final Tour TOUR = com.khartec.waltz.schema.tables.Tour.TOUR;

    /**
     * The table <code>user</code>.
     */
    public final User USER = com.khartec.waltz.schema.tables.User.USER;

    /**
     * The table <code>user_agent_info</code>.
     */
    public final UserAgentInfo USER_AGENT_INFO = com.khartec.waltz.schema.tables.UserAgentInfo.USER_AGENT_INFO;

    /**
     * The table <code>user_preference</code>.
     */
    public final UserPreference USER_PREFERENCE = com.khartec.waltz.schema.tables.UserPreference.USER_PREFERENCE;

    /**
     * The table <code>user_role</code>.
     */
    public final UserRole USER_ROLE = com.khartec.waltz.schema.tables.UserRole.USER_ROLE;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AccessLog.ACCESS_LOG,
            Actor.ACTOR,
            Application.APPLICATION,
            ApplicationGroup.APPLICATION_GROUP,
            ApplicationGroupEntry.APPLICATION_GROUP_ENTRY,
            ApplicationGroupMember.APPLICATION_GROUP_MEMBER,
            AssessmentDefinition.ASSESSMENT_DEFINITION,
            AssessmentRating.ASSESSMENT_RATING,
            AssetCost.ASSET_COST,
            Attestation_1_11.ATTESTATION_1_11,
            AttestationInstance.ATTESTATION_INSTANCE,
            AttestationInstanceRecipient.ATTESTATION_INSTANCE_RECIPIENT,
            AttestationRun.ATTESTATION_RUN,
            AuthoritativeSource.AUTHORITATIVE_SOURCE,
            Bookmark.BOOKMARK,
            ChangeInitiative.CHANGE_INITIATIVE,
            ChangeLog.CHANGE_LOG,
            ComplexityScore.COMPLEXITY_SCORE,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            DatabaseInformation.DATABASE_INFORMATION,
            DataType.DATA_TYPE,
            DataTypeUsage.DATA_TYPE_USAGE,
            DrillGridDefinition.DRILL_GRID_DEFINITION,
            EndUserApplication.END_USER_APPLICATION,
            EntityAlias.ENTITY_ALIAS,
            EntityEnumDefinition.ENTITY_ENUM_DEFINITION,
            EntityEnumValue.ENTITY_ENUM_VALUE,
            EntityHierarchy.ENTITY_HIERARCHY,
            EntityNamedNote.ENTITY_NAMED_NOTE,
            EntityNamedNoteType.ENTITY_NAMED_NOTE_TYPE,
            EntityRelationship.ENTITY_RELATIONSHIP,
            EntityStatisticDefinition.ENTITY_STATISTIC_DEFINITION,
            EntityStatisticValue.ENTITY_STATISTIC_VALUE,
            EntitySvgDiagram.ENTITY_SVG_DIAGRAM,
            EntityTag.ENTITY_TAG,
            EntityWorkflowDefinition.ENTITY_WORKFLOW_DEFINITION,
            EntityWorkflowState.ENTITY_WORKFLOW_STATE,
            EntityWorkflowTransition.ENTITY_WORKFLOW_TRANSITION,
            EnumValue.ENUM_VALUE,
            FlowDiagram.FLOW_DIAGRAM,
            FlowDiagramAnnotation.FLOW_DIAGRAM_ANNOTATION,
            FlowDiagramEntity.FLOW_DIAGRAM_ENTITY,
            Involvement.INVOLVEMENT,
            InvolvementKind.INVOLVEMENT_KIND,
            LogicalDataElement.LOGICAL_DATA_ELEMENT,
            LogicalFlow.LOGICAL_FLOW,
            LogicalFlowDecorator.LOGICAL_FLOW_DECORATOR,
            Measurable.MEASURABLE,
            MeasurableCategory.MEASURABLE_CATEGORY,
            MeasurableRating.MEASURABLE_RATING,
            OrganisationalUnit.ORGANISATIONAL_UNIT,
            Person.PERSON,
            PersonHierarchy.PERSON_HIERARCHY,
            PerspectiveDefinition.PERSPECTIVE_DEFINITION,
            PerspectiveRating.PERSPECTIVE_RATING,
            PhysicalFlow.PHYSICAL_FLOW,
            PhysicalSpecification.PHYSICAL_SPECIFICATION,
            PhysicalSpecDataType.PHYSICAL_SPEC_DATA_TYPE,
            PhysicalSpecDefn.PHYSICAL_SPEC_DEFN,
            PhysicalSpecDefnField.PHYSICAL_SPEC_DEFN_FIELD,
            PhysicalSpecDefnSampleFile.PHYSICAL_SPEC_DEFN_SAMPLE_FILE,
            Process.PROCESS,
            RatingScheme.RATING_SCHEME,
            RatingSchemeItem.RATING_SCHEME_ITEM,
            Roadmap.ROADMAP,
            Scenario.SCENARIO,
            ScenarioAxisItem.SCENARIO_AXIS_ITEM,
            ScenarioRatingItem.SCENARIO_RATING_ITEM,
            ServerInformation.SERVER_INFORMATION,
            Settings.SETTINGS,
            SharedPreference.SHARED_PREFERENCE,
            SoftwarePackage.SOFTWARE_PACKAGE,
            SoftwareUsage.SOFTWARE_USAGE,
            SourceDataRating.SOURCE_DATA_RATING,
            StaticPanel.STATIC_PANEL,
            SurveyInstance.SURVEY_INSTANCE,
            SurveyInstanceRecipient.SURVEY_INSTANCE_RECIPIENT,
            SurveyQuestion.SURVEY_QUESTION,
            SurveyQuestionDropdownEntry.SURVEY_QUESTION_DROPDOWN_ENTRY,
            SurveyQuestionResponse.SURVEY_QUESTION_RESPONSE,
            SurveyRun.SURVEY_RUN,
            SurveyTemplate.SURVEY_TEMPLATE,
            SvgDiagram.SVG_DIAGRAM,
            SystemJobLog.SYSTEM_JOB_LOG,
            Tour.TOUR,
            User.USER,
            UserAgentInfo.USER_AGENT_INFO,
            UserPreference.USER_PREFERENCE,
            UserRole.USER_ROLE);
    }
}
