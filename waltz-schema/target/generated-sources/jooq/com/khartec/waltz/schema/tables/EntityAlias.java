/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.EntityAliasRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityAlias extends TableImpl<EntityAliasRecord> {

    private static final long serialVersionUID = -1115612047;

    /**
     * The reference instance of <code>entity_alias</code>
     */
    public static final EntityAlias ENTITY_ALIAS = new EntityAlias();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityAliasRecord> getRecordType() {
        return EntityAliasRecord.class;
    }

    /**
     * The column <code>entity_alias.id</code>.
     */
    public final TableField<EntityAliasRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>entity_alias.alias</code>.
     */
    public final TableField<EntityAliasRecord, String> ALIAS = createField("alias", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>entity_alias.kind</code>.
     */
    public final TableField<EntityAliasRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("'APPLICATION'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>entity_alias</code> table reference
     */
    public EntityAlias() {
        this(DSL.name("entity_alias"), null);
    }

    /**
     * Create an aliased <code>entity_alias</code> table reference
     */
    public EntityAlias(String alias) {
        this(DSL.name(alias), ENTITY_ALIAS);
    }

    /**
     * Create an aliased <code>entity_alias</code> table reference
     */
    public EntityAlias(Name alias) {
        this(alias, ENTITY_ALIAS);
    }

    private EntityAlias(Name alias, Table<EntityAliasRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityAlias(Name alias, Table<EntityAliasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTITY_ALIAS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityAliasRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_ALIAS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityAliasRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityAliasRecord>>asList(Keys.KEY_ENTITY_ALIAS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityAlias as(String alias) {
        return new EntityAlias(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityAlias as(Name alias) {
        return new EntityAlias(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityAlias rename(String name) {
        return new EntityAlias(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityAlias rename(Name name) {
        return new EntityAlias(name, null);
    }
}
