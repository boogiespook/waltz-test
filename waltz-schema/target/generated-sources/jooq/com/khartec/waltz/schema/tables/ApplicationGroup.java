/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.ApplicationGroupRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicationGroup extends TableImpl<ApplicationGroupRecord> {

    private static final long serialVersionUID = -653341167;

    /**
     * The reference instance of <code>application_group</code>
     */
    public static final ApplicationGroup APPLICATION_GROUP = new ApplicationGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicationGroupRecord> getRecordType() {
        return ApplicationGroupRecord.class;
    }

    /**
     * The column <code>application_group.id</code>.
     */
    public final TableField<ApplicationGroupRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>application_group.name</code>.
     */
    public final TableField<ApplicationGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>application_group.kind</code>.
     */
    public final TableField<ApplicationGroupRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'PUBLIC'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application_group.description</code>.
     */
    public final TableField<ApplicationGroupRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>application_group.external_id</code>.
     */
    public final TableField<ApplicationGroupRecord, String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>application_group.is_removed</code>.
     */
    public final TableField<ApplicationGroupRecord, Boolean> IS_REMOVED = createField("is_removed", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>application_group</code> table reference
     */
    public ApplicationGroup() {
        this(DSL.name("application_group"), null);
    }

    /**
     * Create an aliased <code>application_group</code> table reference
     */
    public ApplicationGroup(String alias) {
        this(DSL.name(alias), APPLICATION_GROUP);
    }

    /**
     * Create an aliased <code>application_group</code> table reference
     */
    public ApplicationGroup(Name alias) {
        this(alias, APPLICATION_GROUP);
    }

    private ApplicationGroup(Name alias, Table<ApplicationGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicationGroup(Name alias, Table<ApplicationGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.APPLICATION_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ApplicationGroupRecord, Long> getIdentity() {
        return Keys.IDENTITY_APPLICATION_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApplicationGroupRecord> getPrimaryKey() {
        return Keys.KEY_APPLICATION_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApplicationGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<ApplicationGroupRecord>>asList(Keys.KEY_APPLICATION_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationGroup as(String alias) {
        return new ApplicationGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationGroup as(Name alias) {
        return new ApplicationGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicationGroup rename(String name) {
        return new ApplicationGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicationGroup rename(Name name) {
        return new ApplicationGroup(name, null);
    }
}
