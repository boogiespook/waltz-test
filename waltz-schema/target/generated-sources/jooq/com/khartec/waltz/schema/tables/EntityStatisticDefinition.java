/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.EntityStatisticDefinitionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityStatisticDefinition extends TableImpl<EntityStatisticDefinitionRecord> {

    private static final long serialVersionUID = 558978671;

    /**
     * The reference instance of <code>entity_statistic_definition</code>
     */
    public static final EntityStatisticDefinition ENTITY_STATISTIC_DEFINITION = new EntityStatisticDefinition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityStatisticDefinitionRecord> getRecordType() {
        return EntityStatisticDefinitionRecord.class;
    }

    /**
     * The column <code>entity_statistic_definition.name</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.description</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>entity_statistic_definition.type</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.category</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.active</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.renderer</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> RENDERER = createField("renderer", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.historic_renderer</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> HISTORIC_RENDERER = createField("historic_renderer", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.provenance</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> PROVENANCE = createField("provenance", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'waltz'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>entity_statistic_definition.parent_id</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>entity_statistic_definition.id</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>entity_statistic_definition.entity_visibility</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, Boolean> ENTITY_VISIBILITY = createField("entity_visibility", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>entity_statistic_definition.rollup_visibility</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, Boolean> ROLLUP_VISIBILITY = createField("rollup_visibility", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>entity_statistic_definition.rollup_kind</code>.
     */
    public final TableField<EntityStatisticDefinitionRecord, String> ROLLUP_KIND = createField("rollup_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'COUNT_BY_ENTITY'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>entity_statistic_definition</code> table reference
     */
    public EntityStatisticDefinition() {
        this(DSL.name("entity_statistic_definition"), null);
    }

    /**
     * Create an aliased <code>entity_statistic_definition</code> table reference
     */
    public EntityStatisticDefinition(String alias) {
        this(DSL.name(alias), ENTITY_STATISTIC_DEFINITION);
    }

    /**
     * Create an aliased <code>entity_statistic_definition</code> table reference
     */
    public EntityStatisticDefinition(Name alias) {
        this(alias, ENTITY_STATISTIC_DEFINITION);
    }

    private EntityStatisticDefinition(Name alias, Table<EntityStatisticDefinitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityStatisticDefinition(Name alias, Table<EntityStatisticDefinitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTITY_STATISTIC_DEFINITION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityStatisticDefinitionRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_STATISTIC_DEFINITION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityStatisticDefinitionRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityStatisticDefinitionRecord>>asList(Keys.KEY_ENTITY_STATISTIC_DEFINITION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityStatisticDefinition as(String alias) {
        return new EntityStatisticDefinition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityStatisticDefinition as(Name alias) {
        return new EntityStatisticDefinition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityStatisticDefinition rename(String name) {
        return new EntityStatisticDefinition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityStatisticDefinition rename(Name name) {
        return new EntityStatisticDefinition(name, null);
    }
}
