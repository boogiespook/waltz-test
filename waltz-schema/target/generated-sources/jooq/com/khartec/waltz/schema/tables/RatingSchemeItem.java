/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.RatingSchemeItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingSchemeItem extends TableImpl<RatingSchemeItemRecord> {

    private static final long serialVersionUID = 1802151231;

    /**
     * The reference instance of <code>rating_scheme_item</code>
     */
    public static final RatingSchemeItem RATING_SCHEME_ITEM = new RatingSchemeItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RatingSchemeItemRecord> getRecordType() {
        return RatingSchemeItemRecord.class;
    }

    /**
     * The column <code>rating_scheme_item.id</code>.
     */
    public final TableField<RatingSchemeItemRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rating_scheme_item.scheme_id</code>.
     */
    public final TableField<RatingSchemeItemRecord, Long> SCHEME_ID = createField("scheme_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rating_scheme_item.name</code>.
     */
    public final TableField<RatingSchemeItemRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>rating_scheme_item.description</code>.
     */
    public final TableField<RatingSchemeItemRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>rating_scheme_item.code</code>.
     */
    public final TableField<RatingSchemeItemRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>rating_scheme_item.color</code>.
     */
    public final TableField<RatingSchemeItemRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>rating_scheme_item.position</code>.
     */
    public final TableField<RatingSchemeItemRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rating_scheme_item.needs_planned_date</code>.
     */
    public final TableField<RatingSchemeItemRecord, Boolean> NEEDS_PLANNED_DATE = createField("needs_planned_date", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>rating_scheme_item.user_selectable</code>.
     */
    public final TableField<RatingSchemeItemRecord, Boolean> USER_SELECTABLE = createField("user_selectable", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>rating_scheme_item</code> table reference
     */
    public RatingSchemeItem() {
        this(DSL.name("rating_scheme_item"), null);
    }

    /**
     * Create an aliased <code>rating_scheme_item</code> table reference
     */
    public RatingSchemeItem(String alias) {
        this(DSL.name(alias), RATING_SCHEME_ITEM);
    }

    /**
     * Create an aliased <code>rating_scheme_item</code> table reference
     */
    public RatingSchemeItem(Name alias) {
        this(alias, RATING_SCHEME_ITEM);
    }

    private RatingSchemeItem(Name alias, Table<RatingSchemeItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private RatingSchemeItem(Name alias, Table<RatingSchemeItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RATING_SCHEME_ITEM_IDX_RATING_SCHEME_ITEM_UNIQUE, Indexes.RATING_SCHEME_ITEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RatingSchemeItemRecord, Long> getIdentity() {
        return Keys.IDENTITY_RATING_SCHEME_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RatingSchemeItemRecord> getPrimaryKey() {
        return Keys.KEY_RATING_SCHEME_ITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RatingSchemeItemRecord>> getKeys() {
        return Arrays.<UniqueKey<RatingSchemeItemRecord>>asList(Keys.KEY_RATING_SCHEME_ITEM_PRIMARY, Keys.KEY_RATING_SCHEME_ITEM_IDX_RATING_SCHEME_ITEM_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RatingSchemeItem as(String alias) {
        return new RatingSchemeItem(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RatingSchemeItem as(Name alias) {
        return new RatingSchemeItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RatingSchemeItem rename(String name) {
        return new RatingSchemeItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RatingSchemeItem rename(Name name) {
        return new RatingSchemeItem(name, null);
    }
}
