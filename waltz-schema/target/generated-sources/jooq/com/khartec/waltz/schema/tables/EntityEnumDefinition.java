/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.EntityEnumDefinitionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Store entity enum definitions
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityEnumDefinition extends TableImpl<EntityEnumDefinitionRecord> {

    private static final long serialVersionUID = 474423417;

    /**
     * The reference instance of <code>entity_enum_definition</code>
     */
    public static final EntityEnumDefinition ENTITY_ENUM_DEFINITION = new EntityEnumDefinition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityEnumDefinitionRecord> getRecordType() {
        return EntityEnumDefinitionRecord.class;
    }

    /**
     * The column <code>entity_enum_definition.id</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>entity_enum_definition.name</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>entity_enum_definition.description</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>entity_enum_definition.icon_name</code>. The default value fw, stands for fixed-width which acts like a spacer icon
     */
    public final TableField<EntityEnumDefinitionRecord, String> ICON_NAME = createField("icon_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("'fw'", org.jooq.impl.SQLDataType.VARCHAR)), this, "The default value fw, stands for fixed-width which acts like a spacer icon");

    /**
     * The column <code>entity_enum_definition.entity_kind</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, String> ENTITY_KIND = createField("entity_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>entity_enum_definition.enum_value_type</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, String> ENUM_VALUE_TYPE = createField("enum_value_type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>entity_enum_definition.position</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>entity_enum_definition.is_editable</code>.
     */
    public final TableField<EntityEnumDefinitionRecord, Boolean> IS_EDITABLE = createField("is_editable", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.field("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>entity_enum_definition</code> table reference
     */
    public EntityEnumDefinition() {
        this(DSL.name("entity_enum_definition"), null);
    }

    /**
     * Create an aliased <code>entity_enum_definition</code> table reference
     */
    public EntityEnumDefinition(String alias) {
        this(DSL.name(alias), ENTITY_ENUM_DEFINITION);
    }

    /**
     * Create an aliased <code>entity_enum_definition</code> table reference
     */
    public EntityEnumDefinition(Name alias) {
        this(alias, ENTITY_ENUM_DEFINITION);
    }

    private EntityEnumDefinition(Name alias, Table<EntityEnumDefinitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityEnumDefinition(Name alias, Table<EntityEnumDefinitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Store entity enum definitions");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTITY_ENUM_DEFINITION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EntityEnumDefinitionRecord, Long> getIdentity() {
        return Keys.IDENTITY_ENTITY_ENUM_DEFINITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityEnumDefinitionRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_ENUM_DEFINITION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityEnumDefinitionRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityEnumDefinitionRecord>>asList(Keys.KEY_ENTITY_ENUM_DEFINITION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityEnumDefinition as(String alias) {
        return new EntityEnumDefinition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityEnumDefinition as(Name alias) {
        return new EntityEnumDefinition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityEnumDefinition rename(String name) {
        return new EntityEnumDefinition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityEnumDefinition rename(Name name) {
        return new EntityEnumDefinition(name, null);
    }
}
