/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.SourceDataRatingRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourceDataRating extends TableImpl<SourceDataRatingRecord> {

    private static final long serialVersionUID = -940084952;

    /**
     * The reference instance of <code>source_data_rating</code>
     */
    public static final SourceDataRating SOURCE_DATA_RATING = new SourceDataRating();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SourceDataRatingRecord> getRecordType() {
        return SourceDataRatingRecord.class;
    }

    /**
     * The column <code>source_data_rating.source_name</code>.
     */
    public final TableField<SourceDataRatingRecord, String> SOURCE_NAME = createField("source_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>source_data_rating.entity_kind</code>.
     */
    public final TableField<SourceDataRatingRecord, String> ENTITY_KIND = createField("entity_kind", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>source_data_rating.authoritativeness</code>.
     */
    public final TableField<SourceDataRatingRecord, String> AUTHORITATIVENESS = createField("authoritativeness", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'Z'", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>source_data_rating.accuracy</code>.
     */
    public final TableField<SourceDataRatingRecord, String> ACCURACY = createField("accuracy", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'Z'", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>source_data_rating.completeness</code>.
     */
    public final TableField<SourceDataRatingRecord, String> COMPLETENESS = createField("completeness", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("'Z'", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>source_data_rating.last_import</code>.
     */
    public final TableField<SourceDataRatingRecord, Timestamp> LAST_IMPORT = createField("last_import", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>source_data_rating</code> table reference
     */
    public SourceDataRating() {
        this(DSL.name("source_data_rating"), null);
    }

    /**
     * Create an aliased <code>source_data_rating</code> table reference
     */
    public SourceDataRating(String alias) {
        this(DSL.name(alias), SOURCE_DATA_RATING);
    }

    /**
     * Create an aliased <code>source_data_rating</code> table reference
     */
    public SourceDataRating(Name alias) {
        this(alias, SOURCE_DATA_RATING);
    }

    private SourceDataRating(Name alias, Table<SourceDataRatingRecord> aliased) {
        this(alias, aliased, null);
    }

    private SourceDataRating(Name alias, Table<SourceDataRatingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SOURCE_DATA_RATING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SourceDataRatingRecord> getPrimaryKey() {
        return Keys.KEY_SOURCE_DATA_RATING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SourceDataRatingRecord>> getKeys() {
        return Arrays.<UniqueKey<SourceDataRatingRecord>>asList(Keys.KEY_SOURCE_DATA_RATING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SourceDataRating as(String alias) {
        return new SourceDataRating(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SourceDataRating as(Name alias) {
        return new SourceDataRating(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SourceDataRating rename(String name) {
        return new SourceDataRating(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SourceDataRating rename(Name name) {
        return new SourceDataRating(name, null);
    }
}
