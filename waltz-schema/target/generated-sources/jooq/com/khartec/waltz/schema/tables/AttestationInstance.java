/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.AttestationInstanceRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Store attestation instance records
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttestationInstance extends TableImpl<AttestationInstanceRecord> {

    private static final long serialVersionUID = 1923645516;

    /**
     * The reference instance of <code>attestation_instance</code>
     */
    public static final AttestationInstance ATTESTATION_INSTANCE = new AttestationInstance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttestationInstanceRecord> getRecordType() {
        return AttestationInstanceRecord.class;
    }

    /**
     * The column <code>attestation_instance.id</code>.
     */
    public final TableField<AttestationInstanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>attestation_instance.attestation_run_id</code>.
     */
    public final TableField<AttestationInstanceRecord, Long> ATTESTATION_RUN_ID = createField("attestation_run_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>attestation_instance.parent_entity_id</code>.
     */
    public final TableField<AttestationInstanceRecord, Long> PARENT_ENTITY_ID = createField("parent_entity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>attestation_instance.parent_entity_kind</code>.
     */
    public final TableField<AttestationInstanceRecord, String> PARENT_ENTITY_KIND = createField("parent_entity_kind", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>attestation_instance.attested_at</code>.
     */
    public final TableField<AttestationInstanceRecord, Timestamp> ATTESTED_AT = createField("attested_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>attestation_instance.attested_by</code>.
     */
    public final TableField<AttestationInstanceRecord, String> ATTESTED_BY = createField("attested_by", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>attestation_instance</code> table reference
     */
    public AttestationInstance() {
        this(DSL.name("attestation_instance"), null);
    }

    /**
     * Create an aliased <code>attestation_instance</code> table reference
     */
    public AttestationInstance(String alias) {
        this(DSL.name(alias), ATTESTATION_INSTANCE);
    }

    /**
     * Create an aliased <code>attestation_instance</code> table reference
     */
    public AttestationInstance(Name alias) {
        this(alias, ATTESTATION_INSTANCE);
    }

    private AttestationInstance(Name alias, Table<AttestationInstanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttestationInstance(Name alias, Table<AttestationInstanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Store attestation instance records");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATTESTATION_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttestationInstanceRecord, Long> getIdentity() {
        return Keys.IDENTITY_ATTESTATION_INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttestationInstanceRecord> getPrimaryKey() {
        return Keys.KEY_ATTESTATION_INSTANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttestationInstanceRecord>> getKeys() {
        return Arrays.<UniqueKey<AttestationInstanceRecord>>asList(Keys.KEY_ATTESTATION_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttestationInstance as(String alias) {
        return new AttestationInstance(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttestationInstance as(Name alias) {
        return new AttestationInstance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttestationInstance rename(String name) {
        return new AttestationInstance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AttestationInstance rename(Name name) {
        return new AttestationInstance(name, null);
    }
}
