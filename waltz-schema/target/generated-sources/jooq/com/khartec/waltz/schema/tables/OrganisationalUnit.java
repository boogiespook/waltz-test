/*
 * This file is generated by jOOQ.
*/
package com.khartec.waltz.schema.tables;


import com.khartec.waltz.schema.DefaultSchema;
import com.khartec.waltz.schema.Indexes;
import com.khartec.waltz.schema.Keys;
import com.khartec.waltz.schema.tables.records.OrganisationalUnitRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganisationalUnit extends TableImpl<OrganisationalUnitRecord> {

    private static final long serialVersionUID = 1734024694;

    /**
     * The reference instance of <code>organisational_unit</code>
     */
    public static final OrganisationalUnit ORGANISATIONAL_UNIT = new OrganisationalUnit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrganisationalUnitRecord> getRecordType() {
        return OrganisationalUnitRecord.class;
    }

    /**
     * The column <code>organisational_unit.id</code>.
     */
    public final TableField<OrganisationalUnitRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>organisational_unit.name</code>.
     */
    public final TableField<OrganisationalUnitRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>organisational_unit.description</code>.
     */
    public final TableField<OrganisationalUnitRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>organisational_unit.parent_id</code>.
     */
    public final TableField<OrganisationalUnitRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>organisational_unit.created_at</code>.
     */
    public final TableField<OrganisationalUnitRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>organisational_unit.updated_at</code>.
     */
    public final TableField<OrganisationalUnitRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>organisational_unit.external_id</code>.
     */
    public final TableField<OrganisationalUnitRecord, String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>organisational_unit</code> table reference
     */
    public OrganisationalUnit() {
        this(DSL.name("organisational_unit"), null);
    }

    /**
     * Create an aliased <code>organisational_unit</code> table reference
     */
    public OrganisationalUnit(String alias) {
        this(DSL.name(alias), ORGANISATIONAL_UNIT);
    }

    /**
     * Create an aliased <code>organisational_unit</code> table reference
     */
    public OrganisationalUnit(Name alias) {
        this(alias, ORGANISATIONAL_UNIT);
    }

    private OrganisationalUnit(Name alias, Table<OrganisationalUnitRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrganisationalUnit(Name alias, Table<OrganisationalUnitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORGANISATIONAL_UNIT_ORGANISATIONAL_UNIT_CONTENT_FT_IDX, Indexes.ORGANISATIONAL_UNIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrganisationalUnitRecord> getPrimaryKey() {
        return Keys.KEY_ORGANISATIONAL_UNIT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrganisationalUnitRecord>> getKeys() {
        return Arrays.<UniqueKey<OrganisationalUnitRecord>>asList(Keys.KEY_ORGANISATIONAL_UNIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganisationalUnit as(String alias) {
        return new OrganisationalUnit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganisationalUnit as(Name alias) {
        return new OrganisationalUnit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrganisationalUnit rename(String name) {
        return new OrganisationalUnit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrganisationalUnit rename(Name name) {
        return new OrganisationalUnit(name, null);
    }
}
